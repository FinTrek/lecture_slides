% FRE7241_Lecture_6

% Define knitr options
% !Rnw weave=knitr
% Set global chunk options
<<knitr_setup,include=FALSE,cache=FALSE>>=
library(knitr)
opts_chunk$set(prompt=TRUE, eval=FALSE, tidy=FALSE, strip.white=FALSE, comment=NA, highlight=FALSE, message=FALSE, warning=FALSE, size='scriptsize', fig.width=4, fig.height=4)
options(width=60, dev='pdf')
options(digits=3)
thm <- knit_theme$get("acid")
knit_theme$set(thm)
@


% Define document options
\documentclass[10pt]{beamer}
\mode<presentation>
\usetheme{AnnArbor}
% \usecolortheme{whale}
% Uncover everything in a step-wise fashion
% \beamerdefaultoverlayspecification{<+->}
% mathtools package for math symbols
% \usepackage{mathtools}
\usepackage[latin1]{inputenc}
\usepackage{hyperref}
\usepackage{fancybox}
\usepackage{url}
\usepackage[backend=bibtex,style=alphabetic]{biblatex} % bibstyle=numeric
% \bibliographystyle{amsalpha} % doesn't work
\addbibresource{FRE_lectures.bib}
% \addbibresource[location=remote]{http://www.citeulike.org/user/jerzyp}
\renewcommand\bibfont{\footnotesize}
\renewcommand{\pgfuseimage}[1]{\scalebox{0.75}{\includegraphics{#1}}} % scale bib icons
\setbeamertemplate{bibliography item}[text] % set bib icons
% \setbeamertemplate{bibliography item}{} % remove bib icons

% \usepackage{enumerate}
% \let\emph\textbf
% \let\alert\textbf
% Define colors for hyperlinks
\definecolor{links}{HTML}{2A1B81}
\hypersetup{colorlinks=true,linkcolor=,urlcolor=links}
% Make url text scriptsize
\renewcommand\UrlFont{\scriptsize}
% Make institute text italic and small
\setbeamerfont{institute}{size=\small,shape=\itshape,bg=red,fg=red}
\setbeamerfont{date}{size=\small}
\setbeamerfont{block title}{size=\normalsize} % shape=\itshape
\setbeamerfont{block body}{size=\footnotesize}


% Title page setup
\title[FRE7241 Lecture\#6]{FRE7241 Algorithmic Portfolio Management}
\subtitle{Lecture\#6, Fall 2016}
% \subject{Getting Started With R}
\institute[NYU Tandon]{NYU Tandon School of Engineering}
\titlegraphic{\includegraphics[scale=0.2]{image/tandon_long_color}}
\author[Jerzy Pawlowski]{Jerzy Pawlowski \emph{\href{mailto:jp3900@nyu.edu}{jp3900@nyu.edu}}}
% \email{jp3900@nyu.edu}
\date{October 11, 2016}
% \date{\today}
% \pgfdeclareimage[height=0.5cm]{university-logo}{engineering_long_white}
% \logo{\pgfuseimage{engineering_long_white}}


%%%%%%%%%%%%%%%
\begin{document}


%%%%%%%%%%%%%%%
\maketitle


%%%%%%%%%%%%%%%
\section{Active Investment Strategies}


%%%%%%%%%%%%%%%
\subsection{Aggregations Over Look-back Windows}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      A time \emph{period} is defined as the time between two neighboring points in time, 
      \vskip1ex
      A time \emph{interval} is defined as the time spanned by one or more neighboring time \emph{periods}, 
      \vskip1ex
      A look-back \emph{window} is a time \emph{interval} for performing aggregations over the past, starting from a \emph{startpoint} and ending at an \emph{endpoint}, 
      \vskip1ex
      The \emph{startpoints} are the \emph{endpoints} lagged by the window width (number of periods in the window), 
      \vskip1ex
      The look-back \emph{windows} may or may not \emph{overlap} with their neighboring windows, 
    \column{0.5\textwidth}
      A rolling aggregation is specified by a vector of look-back \emph{windows} at each point in time, 
      \vskip1ex
      An example of a rolling aggregation are moving average prices, 
      \vskip1ex
      An interval aggregation is specified by a vector of look-back \emph{windows} attached at \emph{endpoints} spanning multiple time \emph{periods}, 
      \vskip1ex
      An example of a non-overlapping interval aggregation are monthly asset returns, 
      \vskip1ex
      An example of an overlapping interval aggregation are 12-month asset returns calculated monthly, 
  \end{columns}
    \vspace{-2em}
    \includegraphics[width=0.9\paperwidth,valign=t]{figure/data_models_rolling_windows.png}\\
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Backtesting Framework with Overlapping Aggregations}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      An interval aggregation can be specified by a vector of look-back \emph{windows} attached at \emph{endpoints} spanning fixed time \emph{intervals}, 
      \vskip1ex
      For example, we may wish to perform aggregations at weekly \emph{endpoints}, over overlapping 40-week look-back \emph{windows}, 
      \vskip1ex
      The variable \texttt{win\_dow} is equal to the number of end points in the look-back \emph{window}, while (\texttt{win\_dow-1}) is equal to the number of intervals in that window, 
      \vskip1ex
      The \emph{startpoints} are the \emph{endpoints} lagged by the number of window intervals (number of intervals in the window), 
    \column{0.5\textwidth}
      \vspace{-1em}
      <<echo=(-(1:1)),eval=FALSE>>=
# library(HighFreq)  # load package HighFreq
# define time interval for end points
re_balance <- "weeks"
# look-back window is multiple of re_balance
win_dow <- 41
# create index of rebalancing period end points
end_points <- xts::endpoints(env_etf$re_turns, 
                             on=re_balance)
# start_points are multi-period lag of end_points
len_gth <- length(end_points)
start_points <-  end_points[
  c(rep_len(1, win_dow-1), 
    1:(len_gth-win_dow+1))]
# create list of look-back intervals
inter_vals <- lapply(2:len_gth, 
    function(in_dex) {
      start_points[in_dex]:end_points[in_dex]
  })  # end lapply
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Performing Overlapping Aggregations}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      An interval aggregation can be specified by a vector of look-back \emph{windows} attached at \emph{endpoints} spanning fixed time \emph{intervals}, 
      \vskip1ex
      For example, we may wish to perform aggregations at weekly \emph{endpoints}, over overlapping 40-week look-back \emph{windows}, 
      \vskip1ex
      The variable \texttt{win\_dow} is equal to the number of end points in the look-back \emph{window}, while (\texttt{win\_dow-1}) is equal to the number of intervals in that window, 
      \vskip1ex
      The \emph{startpoints} are the \emph{endpoints} lagged by the number of window intervals (number of intervals in the window), 
    \column{0.5\textwidth}
      \vspace{-1em}
      <<echo=(-(1:1)),eval=FALSE>>=
# library(HighFreq)  # load package HighFreq
# create list of symbols for model
sym_bols <- c("VTI", "IEF", "DBC")

# calculate risk&ret stats for some symbols, over a range of dates
# perform lapply() loop over inter_vals
risk_stats <- lapply(inter_vals, 
  function(inter_val) {
    x_ts <- 
      env_etf$re_turns[inter_val, sym_bols]
    t(sapply(x_ts, 
      function(col_umn)
        c(return=mean(col_umn), risk=mad(col_umn))
      ))  # end sapply
    })  # end lapply
# rbind list into single xts or matrix
# risk_stats <- rutils::do_call_rbind(risk_stats)
# head(risk_stats)
# calculate non-overlapping returns in interval
re_turns <-sapply(2:len_gth, 
    function(in_dex) {
    sapply(env_etf$re_turns[
      (end_points[in_dex-1]+1):end_points[in_dex], 
      sym_bols], sum)
  })  # end sapply
re_turns <- t(re_turns)
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Performing Rolling Model Calibrations}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      An interval aggregation can be specified by a vector of look-back \emph{windows} attached at \emph{endpoints} spanning fixed time \emph{intervals}, 
      \vskip1ex
      The \emph{startpoints} are the \emph{endpoints} lagged by the number of window intervals (number of intervals in the window), 
      <<echo=TRUE,eval=FALSE>>=
# calculate list of portfolio weights
# perform lapply() loop over risk_stats
weight_s <- sapply(risk_stats, 
    function(risk_stat) {
      weight_s <- risk_stat[, 1]/risk_stat[, 2]
      weight_s <- weight_s - mean(weight_s)
      weight_s <- weight_s/sum(abs(weight_s))
    })  # end sapply
weight_s <- t(weight_s)
weights_xts <- xts(weight_s, 
  order.by=index(env_etf$re_turns[end_points]))
# plot weights
x11()
zoo::plot.zoo(weights_xts, xlab=NULL)
      @
    \column{0.5\textwidth}
    \vspace{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/portf_weights.png}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Performing Backtesting}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      An interval aggregation can be specified by a vector of look-back \emph{windows} attached at \emph{endpoints} spanning fixed time \emph{intervals}, 
      \vskip1ex
      For example, we may wish to perform aggregations at weekly \emph{endpoints}, over overlapping 40-week look-back \emph{windows}, 
      <<echo=TRUE,eval=FALSE>>=
# calculate pnls over all windows
pn_l <- rowSums(weight_s[-NROW(weight_s), ] * 
                  re_turns[-1, ])
# calculate transaction costs
bid_offer <- 0.001  # 10 bps for liquid ETFs
cost_s <- bid_offer*abs(diff(weight_s))
cost_s <- rowSums(cost_s)
pn_l <- pn_l - cost_s
pn_l <- xts(cumsum(pn_l), 
  order.by=index(env_etf$re_turns[end_points[-(1:2)]]))
colnames(pn_l)[1] <- "pnl"
# plot strategy pnl
x11()
chart_Series(x=pn_l, name="Strategy PnL")
      @
    \column{0.5\textwidth}
    \vspace{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/backtest_pnl.png}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Strategy Market Beta}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      \vspace{-1em}
      <<echo=TRUE,eval=FALSE>>=
# calculate betas
beta_s <- c(1, env_etf$capm_stats[
  match(sym_bols[-1], 
        rownames(env_etf$capm_stats)), 
  "Beta"])
names(beta_s)[1] <- sym_bols[1]
# weights times betas
beta_s <- weight_s %*% beta_s
beta_s <- xts(beta_s, 
  order.by=index(
    env_etf$re_turns[end_points[-1]]))
colnames(beta_s) <- "portf_beta"
x11()
plot.zoo(cbind(beta_s, 
  env_etf$VTI[, 4])[index(beta_s)],
  main="betas & VTI", xlab="")
      @
    \column{0.5\textwidth}
    \vspace{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/backtest_betas.png}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Strategy Optimization}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      \vspace{-1em}
      <<echo=TRUE,eval=FALSE>>=
# create trading function
run_strat <- function(win_dow) {
  start_points <-  end_points[
    c(rep_len(1, win_dow-1), 
      1:(len_gth-win_dow+1))]
  inter_vals <- lapply(2:len_gth, 
                       function(in_dex) {
                         start_points[in_dex]:end_points[in_dex]
                       })  # end lapply
  risk_stats <- lapply(inter_vals, 
                       function(inter_val) {
                         x_ts <- env_etf$re_turns[inter_val, sym_bols]
                         t(sapply(x_ts, 
                                  function(col_umn)
                                    c(return=mean(col_umn), risk=mad(col_umn))
                         ))  # end sapply
                       })  # end lapply
  weight_s <- sapply(risk_stats, 
                     function(risk_stat) {
                       weight_s <- risk_stat[, 1]/risk_stat[, 2]
                       weight_s <- weight_s - mean(weight_s)
                       weight_s <- weight_s/sum(abs(weight_s))
                     })  # end sapply
  weight_s <- t(weight_s)
  pn_l <- rowSums(weight_s[-NROW(weight_s), ] * re_turns[-1, ])
  cost_s <- bid_offer*abs(diff(weight_s))
  cost_s <- rowSums(cost_s)
  pn_l <- pn_l - cost_s
  sum(pn_l)
}  # end run_strat
      @
    \column{0.5\textwidth}
    \vspace{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/strat_profile}
    \vspace{-1em}
      <<echo=TRUE,eval=FALSE>>=
window_s <- 8*(1:7)
strat_profile <- sapply(window_s, run_strat)
plot(cbind(window_s, strat_profile), t="l", 
     main="Strategy PnL as function of window size", 
     xlab="window", ylab="pnl")
      @
  \end{columns}
\end{block}

\end{frame}



%%%%%%%%%%%%%%%
\section{Homework Assignment}


%%%%%%%%%%%%%%%
\subsection{Homework Assignment}
\begin{frame}[t]{\secname}
\vspace{-1em}
\begin{block}{Required}
  Read all the lecture slides in \texttt{FRE7241\_Lecture\_6.pdf}, and run all the code in \texttt{FRE7241\_Lecture\_6.R}
\end{block}
\begin{block}{Recommended}
  \begin{itemize}[]
    \item Read chapters 1-3: \fullcite{website:rintro}
    \item Read chapters 1, 2, 11: \citetitle{matloffbook}
    \item Read: \fullcite{website:googlestyler}
  \end{itemize}
\end{block}

\end{frame}


\end{document}
