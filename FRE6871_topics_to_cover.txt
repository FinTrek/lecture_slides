### FRE-6871 R in Finance
FRE-GY 6871

GA is Anshuang Fu \href{af3007@nyu.edu}{af3007@nyu.edu}
room RH214

# former GAs
Alex Sun alex.sun@nyu.edu
Jiabin Lin jl6593@nyu.edu
Jaimin Doshi jbd316@nyu.edu
Harjinder Singh	harjinder.singh@nyu.edu
Xirui He	xh521@nyu.edu

# my Datacamp course
https://www.datacamp.com/courses/1203


### replies

I'm already supervising two capstone projects in the Spring 2017 semester, so I can't supervise another project now.
I may be able to supervise capstone projects later in the year, but the requirement is strong programming skills in either Python or C++.
Maybe you can contact me at the end of the Spring 2017 semester, if you're still interested.

I added you to NYU Classes. 
Have you used the R language?
If you haven't taken the course FRE6871 R in Finance, then I encourage you to attend classes.
Have you taken courses by prof. Song Tang?

FRE6123 Financial Risk Management and Asset Pricing
FRE6083 Quantitative Methods in Finance

For FRE-6871 R in Finance I need a grader.  The GA's responsibilities will be grading and answering student questions during office hours.
Preference is for student who has already taken FRE-6871, or who has strong R programming skills.

###

Jonnett Romano
Program Manager
Department of Finance and Risk Engineering
NYU Tandon School of Engineering
New York University
12 Metrotech Center, 26 floor
Brooklyn, NY 11201
Ph:  646-997-3271
Fax: 646-997-3355
Email: jonnett.romano@nyu.edu

##############

FITL NYU Classes develop online course
http://engineering.nyu.edu/academics/support/fitl
http://engineering.nyu.edu/events/2015/08/26/building-online-course-supplement
http://engineering.nyu.edu/academics/support/fitl/training/workshop-schedule

NYU Classes
Lexie Bryan
fitl@nyu.edu
646-997-4120

# link to NYU Box
https://nyu.app.box.com/s/fevivsmw6xq46fu4vtp1qet6qmw6lsuu

The code performance (speed) almost always matters.
- Linus Torvalds


##############

Yes, those two are great, and another one:
NYC Open Data
http://www.meetup.com/NYC-Open-Data/

New York R Users Group
http://www.meetup.com/New-York-R-Users-Group/

New York Open Statistical Programming
http://www.meetup.com/nyhackr/

# Byte code compilation
http://adv-r.had.co.nz/Profiling.html


##############
### to-do list

+ [ ] calculate Standard Errors of VaR and CVaR due to uncertainty of default probabilities - create homework?

+ [ ] in logistic regression Defaults example, make the null hypothesis to be no-default

+ [ ] adapt t-test example
http://ww2.coastal.edu/kingw/statistics/R-tutorials/independent-t.html

+ [ ] adapt very good logit tutorials
http://www.theanalysisfactor.com/r-tutorial-glm1/
http://stats.idre.ucla.edu/r/dae/logit-regression/

+ [ ] explain that function fastLm() using RcppArmadillo is 40 times faster than lm()

+ [ ] adapt package inline for creating Rcpp functions
C:\Research\R\Tutorials\Højsgaard Rcpp lectures\day4\interfaceC-slides.pdf

+ [ ] adapt RcppArmadillo examples from: 
C:\Research\R\Tutorials\Olmsted RcppArmadillo.pdf

+ [ ] adapt RcppArmadillo matrix inversion from: 
armadillo_function_tests.R
armadillo_functions.cpp
C:\Research\R\Tutorials\Højsgaard Rcpp lectures\day5\interfaceCpp-slides.pdf
C:\Research\R\Tutorials\Højsgaard Rcpp lectures\day5aux\src_arma.cpp

+ [ ] adapt matrix derivatives and regression formulas from:
http://thecoatlessprofessor.com/statistics/multiple-linear-regression-proofs/

+ [ ] adapt from Exploratory Data Analysis in R
http://mgimond.github.io/ES218/index.html
http://github.com/mgimond

+ [ ] adapt from Stats with R - excellent!!!
http://mgimond.github.io/Stats-in-R/index.html
http://mgimond.github.io/Stats-in-R/F_test.html

+ [ ] adapt code from:
Financial Mathematics course from Loyola University by Harry Georgakopoulos
http://www.rfortraders.com/
https://github.com/hgeorgako/rfortraders
C:\Research\R\Tutorials\Georgakopoulos\rfortraders

+ [ ] implement Tierney R Byte Code Compiler.pdf

+ [ ] create PCA animations
use pca_animated gif
https://m.youtube.com/watch?v=2LorBMSXeHc&feature=youtu.be

+ [ ] change inner_prod=(t(re_turns) %*% re_turns) to cross_prod=crossprod(re_turns)

+ [ ] change equation solver matrix calculation to the fastest:
solve(crossprod(A), crossprod(A, b))
instead of matrix multiplication combined with solve()

+ [ ] explain that regression is an overspecified (overdetermined) linear equation problem (matrix inversion)
When the regression matrix is singular, then the problem becomes underspecified.

+ [ ] create intro slides using mtcars
https://rcloud.social/edit.html?notebook=76a629ac2f22466b6dc5
C:\Develop\R\lecture_slides\scripts\Data Analysis-Intro to wdcplot-mtcars Example.Rmd
C:\Develop\R\lecture_slides\scripts\Data Analysis-Statistics Tutorial.Rmd

+ [ ] update mtcars regression example
mtcars regress: create formula using colnames and paste
create variable out of column name, use functions:	assign, get, as.name, 
http://zoonek2.free.fr/UNIX/48_R/09.html#7
https://rpubs.com/kavipubs/25400
http://rstudio-pubs-static.s3.amazonaws.com/20858_82b28110c8ec44129848a691c4f02246.html

+ [ ] change bootstrap of mean() to sum()/len_gth

+ [ ] add example of Lagrange multiplier method for constrained optimization from Bennett - can't find the source
https://www.khanacademy.org/math/multivariable-calculus/applications-of-multivariable-derivatives/constrained-optimization/a/lagrange-multipliers-examples

+ [ ] add to expressions.pdf explanation, example, and rule of thumb:
Use apply() loops when you want to return values, not for() loops.
for() loops don't return values.
for() loops are good in rare cases when you are forced to create side effects.

+ [ ] adapt from Brian Reich lectures: optimization, LASSO regression, SVD, PCA, Kalman filter, machine learning
http://www4.stat.ncsu.edu/~reich/BigData/code/
http://www4.stat.ncsu.edu/~reich/

+ [ ] explain difference between calling: plot() and plot.zoo() on xts object
add slide for plotting xts objects using plot.zoo()

+ [ ] create parallel OpenMP code example from chapter 16.3.2: Matloff book The Art of R Programming

+ [ ] incorporate ideas and parallel R code from: Matloff book The Art of R Programming
https://wrathematics.github.io/RparallelGuide/

+ [ ] incorporate ideas and code from: Matloff book Statistical Modeling.pdf  

+ [ ] incorporate ideas and code from: Matloff book Programming on Parallel Machines.pdf (?)  
very advanced

+ [ ] incorporate ideas and code from: Matloff book Linear Models Machine Learning.pdf  
very sketchy

+ [ ] finish slide in statistics:
\subsection{devel: Autocorrelated Time Series Regression}

+ [ ] adapt ISLR multiple linear regression p.82
using Credit.csv data set in C:\Develop\data\ISLR

wipp

+ [ ] classification, logistic regression, and ROC curve
https://freakonometrics.hypotheses.org/9023
https://freakonometrics.hypotheses.org/9066

+ [ ] adapt KNN example for German credit
https://rpubs.com/ranjitmishra/123438

+ [ ] adapt from credit scoring using machine learning from:
https://residualmetrics.com/index.php/featured-home/20-micro-perspectives/44-ml-showdown-comparing-4-machine-learning-methods-to-a-logit-model-of-loan-applications

+ [ ] Farrell Chicago Booth Credit Risk scoring using glmnet
http://faculty.chicagobooth.edu/max.farrell/bus41100/
http://faculty.chicagobooth.edu/max.farrell/bus41100/week8-Rcode.R

+ [ ] create credit scoring forecasting model for German credit database
https://onlinecourses.science.psu.edu/stat857/node/215
Sharma Credit Scoring.pdf
https://cran.r-project.org/doc/contrib/Sharma-CreditScoring.pdf
http://archive.ics.uci.edu/ml/datasets/Statlog+%28German+Credit+Data%29
http://freakonometrics.hypotheses.org/48285
https://mkmanu.wordpress.com/2014/08/28/modelling-credit-score-in-r-part-1/
https://mkmanu.wordpress.com/2014/08/28/modelling-credit-scoring-in-r-part-2/

German Credit dataset files:
http://archive.ics.uci.edu/ml/index.php
http://archive.ics.uci.edu/ml/datasets/Statlog+%28German+Credit+Data%29
GermanCredit.csv
credit.csv
code files
https://www.packtpub.com/big-data-and-business-intelligence/machine-learning-r-second-edition
https://www.packtpub.com/books/content/support/21990

+ [ ] adapt decision trees for credit scoring forecasting from:
https://r-posts.com/how-to-identify-risky-bank-loans-using-c-50-decision-trees/
https://eight2late.wordpress.com/2016/02/16/a-gentle-introduction-to-decision-trees-using-r/
https://data-flair.training/blogs/r-decision-trees/
http://archive.ics.uci.edu/ml/datasets/Statlog+%28German+Credit+Data%29
https://rpubs.com/mzc/mlwr_dtr_credit_mushrooms

+ [ ] create credit scoring forecasting decision trees model
C:\Research\R\Tutorials\CreditScoring gastonstat
https://github.com/gastonstat/CreditScoring

+ [ ] create credit scoring forecasting model for Chilean loans
https://cran.r-project.org/web/packages/smbinning/smbinning.pdf

+ [ ] adapt decision trees for credit scoring forecasting from:
https://www.datacamp.com/courses/introduction-to-credit-risk-modeling-in-r

+ [ ] update the logistic regression credit card scoring example using University of California, Irvine (UCI) Machine Learning Repository dataset: 
https://rcloud.social/view.html?notebook=bf599ab697ac92754cedcdcc8d14952f
https://archive.ics.uci.edu/ml/datasets/default+of+credit+card+clients
Python code:
https://github.com/natbusa/deepcredit
Yeh Lien Credit Scoring Models.pdf

+ [ ] Kaggle loan credit scoring forecasting model using Kaggle in Class data
https://www.kaggle.com/c/loan-default-prediction
https://github.com/ChenglongChen/Kaggle_Loan_Default_Prediction
https://nycdatascience.com/blog/student-works/capstone/kaggle-predict-consumer-credit-default/
read the csv files:
library(data.table)
library(bit64)
system.time(train <- fread("./data/train_v2.csv", header=TRUE, sep=","))
test_v2.csv
train_v2.csv

+ [ ] Kaggle credit card scoring forecasting model using Kaggle in Class data
https://www.kaggle.com/jerzypawlowski/default-credit-and-credit-score-prediction
https://www.kaggle.com/uciml/default-of-credit-card-clients-dataset
https://blogs.oracle.com/meena/analysing-credit-card-default-datasets-using-apache-spark-and-scala
kaggle_credit_card_model.Rmd
UCI_Credit_Card.csv
https://inclass.kaggle.com/
https://www.kaggle.com/datasets
https://inclass.kaggle.com/c/dm-regression-tartu/details/random-forest-example
https://inclass.kaggle.com/c/financial-price-prediction-asian
http://blog.nycdatascience.com/student-works/kaggle-predict-consumer-credit-default/
https://github.com/BernardOng/kaggle-consumer-credit-default

+ [ ] h2o machine learning loan credit scoring forecasting
https://github.com/h2oai/h2o-3/blob/master/h2o-r/demos/rdemo.lending.club.large.R

+ [ ] create examples for credit scoring forecasting classification models
Daniel C. Chiang FRE student project
https://github.com/ccc639/R-SQL-BlXXXbXXg_test_90mins_ML
Joshua Kunst riskr package for credit scoring
http://jkunst.com/riskr/

+ [ ] plot interactive ROC charts
http://sachsmc.github.io/plotROC/

+ [ ] adapt from Revolution Analytics credit scoring shiny app
http://blog.revolutionanalytics.com/2017/07/credit-risk-prediction.html
https://github.com/Microsoft/acceleratoRs/tree/master/CreditRiskPrediction
https://github.com/Microsoft/acceleratoRs/blob/master/CreditRiskPrediction/Code/CreditRiskPrediction.Rmd
https://github.com/Microsoft/acceleratoRs/blob/master/CreditRiskPrediction/Code/CreditRiskShinyApp.Rmd

+ [x] install profvis

+ [x] add slide for hist() in data_structures.Rnw after Tables of Categorical Data

+ [x] create slide explaining how to submit questions via email by providing a minimal working example

+ [x] add lines to Logistic Map plot

+ [x] perform PCA on differenced Treasury rates, instead of percentage returns

+ [x] perform principal component analysis PCA of yield curve: download interest rate data from FRED  
https://research.stlouisfed.org/pdl/4

+ [x] fix slides:
Standard Errors of VaR Using Bootstrap Simulation
Standard Errors of VaR Using Parallel Bootstrap
No need for: 
default_probs[sample.int(num_assets, replace=TRUE)]

+ [x] add slides:
Cumulative Defaults Under the Vasicek Model
Value at Risk Under the Vasicek Model

+ [x] solve regression by hand
http://www4.stat.ncsu.edu/~reich/BigData/code/fastOLS.html

+ [x] add standard errors of regression by hand
http://stats.stackexchange.com/questions/44838/how-are-the-standard-errors-of-coefficients-calculated-in-a-regression

+ [x] calculate coefficients of multivariate linear regression using linear algebra

+ [x] add logistic regression credit card scoring forecasting using Default data from package ISLR::Default  
James book Statistical Learning in R.pdf
http://datascienceplus.com/perform-logistic-regression-in-r/
https://ww2.coastal.edu/kingw/statistics/R-tutorials/logistic.html
https://www.analyticsvidhya.com/blog/2015/11/beginners-guide-on-logistic-regression-in-r/
http://www.ats.ucla.edu/stat/r/dae/logit.htm
https://rpubs.com/funwithnumbers/124689

+ [ ] perform parallel bootstrap in Rcpp

+ [ ] create function boot_strap() to perform parallel bootstrap  
similar to function boot() from package boot  
http://adv-r.had.co.nz/Functionals.html

+ [ ] send memo to students about how to improve programming skills: meetups, GitHub, kaggle, 

+ [ ] invite students to meetups and LinkedIn group

+ [ ] create R notebooks
http://rmarkdown.rstudio.com/r_notebooks.html

+ [ ] create revealjs html presentation  
https://github.com/rstudio/revealjs

+ [ ] create notebook on RCloud
http://rcloud.social/index.html
https://github.com/att/rcloud

+ [ ] simulate Stein's paradox using example from p.225 of ISLR "A Simple Special Case for Ridge Regression and the Lasso"
Calculate standard error of the regression coefficients.
reproduce figure 6.10
Demonstrate that the estimator B_j = y_j doesn't have the smallest standard error.

+ [ ] determine appropriate Datacamp courses and send email to students.  

1. set up group video calls for remote class sessions
http://hangouts.nyu.edu/
https://nyu.service-now.com/servicelink/search_results.do?sysparm_document_key=kb_knowledge,8c282e490f27a1c04d20348ce1050edf&sysparm_search=classes
https://nyu.service-now.com/servicelink/search_results.do?sysparm_document_key=kb_knowledge,41f7a43774c5c10075e62ca050042ef7&sysparm_search=classes+tutorial

2. NYU Classes training
https://wikis.nyu.edu/pages/viewpage.action?pageId=46211277

+ [ ] add review of machine learning algorithms:
http://blogs.sas.com/content/subconsciousmusings/2017/04/12/machine-learning-algorithm-use/

3. create space on NYU Wikis
https://wikis.nyu.edu/dashboard.action

4. create R for finance group on 
https://wikis.nyu.edu/

# add plotly OHLC chart examples - create account
https://plot.ly/r/
https://plot.ly/javascript/candlestick-charts/
http://moderndata.plot.ly/interactive-r-visualizations-with-d3-ggplot2-rstudio/
http://moderndata.plot.ly/r-python-matlab-dashboards-graphs-with-d3-js-webgl/
http://moderndata.plot.ly/interactive-r-visualizations-with-d3-ggplot2-rstudio/
https://plot.ly/quandl/?code=GOOG/AMEX_LVOL

# add pacman to packages.Rnw
https://cran.r-project.org/web/packages/pacman/vignettes/Introduction_to_pacman.html

# make knitr produce HTML output

+ [ ] create slides for package fEcofin Economic and Financial Data Sets for rmetrics

+ [ ] add slide for interpolation of a vector of numbers: create example for interpolating discount factors by interpolating zero rates
http://blog.revolutionanalytics.com/2015/09/interpolation-and-smoothing-functions-in-base-r.html

+ [ ] kable example: knitr::kable(mtcars)



### themes to add

+ [x] logistic map in Rcpp

+ [ ] Monte Carlo simulation of CDO/CLO

+ [ ] decision trees
+ [ ] k-means clustering

+ [ ] optimization by hand in Rcpp
+ [ ] newton-raphson method for numerical solution of equations by hand in Rcpp (add newton-raphson method animated gif)
+ [ ] option implied volatility in Rcpp
+ [ ] creating a package with Rcpp

+ [ ] RcppArmadillo



###########
### topics to add

+ [x] Demonstrate the split-apply-combine procedure on data in CRSPpanel.txt
Adapt code from the homework:
# Summary: Perform aggregations on a data frame of panel 
# data using the split-apply-combine procedure. 

+ [ ] explain treasury yield curve
https://institute.cmegroup.com/products/ZN
Trading Treasury Yield Curve.pdf
Trading Treasury Futures.pdf

+ [ ] add to statistics.Rnw regularization for regression using dimensionality reduction
Dimensionality reduction allows running regression even when number of observations is less than number of predictors (explanatory variables, independent variables)

+ [ ] add slides for shiny::runExample()
C:\Users\Jerzy\Documents\R\win-library\3.4\shiny\examples

+ [ ] explain that there are at least two sources of the standard errors of VaR and CVaR
The first source is the finite sample size when VaR and CVaR are calculated in a simulation.
Demonstrate that when the confidence level is very high, the finite sample size causes the standard errors to become as large as the VaR and CVaR themselves.
The second source is the uncertainty of the model parameters, like the default probabilities or recovery rates (LGD).

+ [ ] to speed up Rcpp calculations avoid making copies of input matrices and vectors by passing pointers to them, and modify matrices in place
The code: 
my_func(arma::vec& vec_tor)
passes a pointer instead of making a copy
Arguments in C++ are by default passed by value, which means C++ makes a copy of x before running your function. 
To avoid this unnecessary copy pass a pointer instead of making a copy
instead of:
my_func(arma::vec vec_tor)
The code with "const" prevents C++ from changing the input data: 
my_func(const arma::vec& vec_tor)

+ [ ] demonstrate the use of sweep() for matrix multiplication
https://stackoverflow.com/questions/18349053/fastest-way-for-multiplying-a-matrix-to-a-vector

+ [ ] explain estimation uncertainty of VaR and CVaR risk measures at low sample sizes 
ValueatRisk is superior to expected shortfall.
Danielsson CVAR Estimation Standard Error.pdf

+ [ ] Vasicek model calibration: correlation, LGD
Schaefer Vasicek Model.pdf
Rutkowski Vasicek Model.pdf
Martin Vasicek Basel IRB Credit Model.pdf
Kupiec Vasicek Basel IRB Credit Model.pdf
correlation in range 5-20%

+ [ ] LGD and Recovery Rates in Credit Risk Models
Altman LGD Recovery Rates Credit Risk Models.pdf
Altman LGD Recovery Rates Credit Risk Models 2005.pdf
Seidler LGD Recovery Rates Credit Risk Models.pdf

+ [ ] add slide Standard Errors of VaR Using Parallel Bootstrap Simulation

+ [ ] expand on unexpected credit losses
http://riskarticles.com/credit-risk-how-to-calculate-expected-loss-unexpected-loss/
https://financetrainingcourse.com/education/2014/12/unexpected-loss-ul-expected-loss-economic-capital-case-study/

+ [ ] simulate multi-period defaults using Vasicek CreditMetrics model credit portfolios: copula functions
use package CreditMetrics
use package GCPM
use package bfa for C++ copula code?
http://dirk.eddelbuettel.com/code/rcpp.cranusers.html
https://cran.r-project.org/web/packages/bfa/index.html
use this code?
http://www.quantessence.de/home/
https://quantessence.wordpress.com/2011/12/23/cholesky-decomposition-algorithm-in-c/
https://quantessence.wordpress.com/2011/12/30/sampling-correlated-asset-paths/
https://quantessence.wordpress.com/2011/12/30/standard-normal-random-variable-generator-in-c/
https://quantessence.wordpress.com/2012/06/28/heston-stochastic-volatility-model-c/
https://quantessence.wordpress.com/2010/03/01/bond-pricer-c/
explain Cholesky decomposition and when it fails

+ [ ] CreditGrades model
https://github.com/coderxiaok/CreditGrade-model-for-CDS-pricing/blob/master/CredieGrade%20Model.R

+ [ ] adapt from:
Kliestik Review of Credit Risk Models.pdf
RiskMetrics CreditGrades.pdf
RiskMetrics CreditMetrics.pdf
http://www.mathfinance.wagner.com/PAPERS/P2/CM2_Final.html

+ [ ] create shiny app to demonstrate tranche PVs as function of portfolio losses
sliders for expected and actual portfolio losses
sliders for tranche attachement points
barchart for tranche PVs
create long-short tranche combinations which have positive convexity
show that tranche must earn premium for unexpected losses

+ [ ] create shiny app to demonstrate tranche expected losses as function of attachement points
use Vasicek function and integrate()
slider for expected portfolio losses
sliders for tranche attachement points
plot Vasicek function with red shaded tranche

+ [ ] create R package for CLO model using Rcpp
use QuantLib to calibrate CDS?

+ [ ] simulate CLO with timing of defaults, waterfalls, and OC/IC tests
create homework for CLO with four tranches based on CLO with three tranches
create function to plot cashflows in panels 
create shiny app to demonstrate relationship of tranche PVs and cashflows on volatility and correlation
demonstrate that tranches are like options, and their optionality depends on the level of expected losses 
create shiny app to demonstrate relationship of tranche PVs and cashflows on recovery rate

+ [ ] Monte Carlo simulation of CDO/CLO  
study effect of default rate intensity
study effect of leverage
study effect of higher risk: at high leverage, higher yield and default rate lead to higher equity tranche returns
allignment of interests between equity and debt tranches

+ [ ] calibrate CDS and implied default rates from spreads and recovery rates using packages creditr and CDS
# Markit CDS api
# ISDA CDS Standard Model
http://www.cdsmodel.com/cdsmodel/
Credit Default Swaps CDS with R.pdf
CDS.pdf
# package creditr for pricing credit default swaps using ISDA CDS Standard Model
# package CDS is new version of creditr ?
yuanchu.dang@williams.edu
zijie.zhu@williams.edu
https://github.com/Yuanchu/creditr
# package CDS for pricing credit default swaps using ISDA CDS Standard Model
https://github.com/yl2
# Yuanchu Dang and Zijie Zhu package creditr for pricing credit default swaps

+ [ ] add LASSO regression example using ISLR::Hitters salary forecasting and Elastic Net FX model
https://quantmacro.wordpress.com/2016/04/26/fitting-elastic-net-model-in-r/

+ [ ] Elastic Net and LASSO regression
adapt simple example from: Zou presentation Elastic Net Regularization Variable Selection.pdf
Zou Elastic Net Regularization Variable Selection.pdf
Chinco LASSO Regression Stock Forecasting.pdf
Li Elastic Net LASSO Regression Currency Forecasting.pdf
Li Li Elastic Net LASSO Regression Currency Forecasting Chicago.pdf
https://gist.github.com/alexchinco/467325abbf11d5c8f565
http://www.alexchinco.com/using-the-lasso-to-forecast-returns/
https://quantmacro.wordpress.com/2016/01/07/lasso-model-example-lmes-aluminium-futures-price/

+ [ ] fast data serialization using packages fst and feather
http://blog.revolutionanalytics.com/2017/02/fst-fast-serialization-of-r-data-frames.html

+ [ ] classification methods comparison
http://www4.stat.ncsu.edu/~reich/BigData/code/glmnet.html

+ [ ] create parallel k-means clustering R code example from chapter 16.2.4: Matloff book The Art of R Programming

+ [ ] adapt from clustering examples
https://cran.r-project.org/web/packages/dendextend/vignettes/Cluster_Analysis.html

+ [ ] add package FactoMineR
http://www.statpower.net/Content/312/R%20Stuff/PCA.html
Adapt paper by Gavish and Donoho: The Optimal Hard Threshold for Singular Values is 4/sqrt(3)
https://stats.stackexchange.com/questions/44060/choosing-number-of-principal-components-to-retain
https://stats.stackexchange.com/questions/141754/pca-and-correspondence-analysis-in-their-relation-to-biplot
https://stats.stackexchange.com/questions/134282/relationship-between-svd-and-pca-how-to-use-svd-to-perform-pca
https://stats.stackexchange.com/questions/2691/making-sense-of-principal-component-analysis-eigenvectors-eigenvalues

+ [ ] in first lecture introduce basic plotting (install package xts)
simple line plot:
plot(sin(4*pi*(1:5000)/5000), t="l", ylab="sine", main="simple line plot")
plotting in multiple panels:
dri_ft <- sapply(1:3, function(x) 0.01*sin(4*pi*(1:5000)/5000 + 2*pi*x/3))
plot.zoo(dri_ft)

+ [ ] how to use dplyr filter instead of standard data frame syntax
Manipulating data tables with dplyr
http://mgimond.github.io/ES218/Week03a.html
mtcars[mtcars$cyl==4, ]
dplyr::filter(mtcars, cyl==4)

+ [ ] adapt from ECON457 optimization in R

+ [ ] add newton-raphson optimization
C:\Research\R\Tutorials\Georgakopoulos\rfortraders\Chapter_10

+ [ ] black-scholes option model using RcppArmadillo
http://gallery.rcpp.org/articles/black-scholes-three-ways/

+ [ ] black-scholes option model use R/Finance slides
AlexanderMcNeil.pdf
black-scholes
merton model
http://models.cliffordang.com/bs.R

+ [ ] create option examples using RQuantLib package  
http://dirk.eddelbuettel.com/code/rquantlib.html

+ [ ] create option examples from GARPFRM package  
C:\Develop\R\fin_engine\vignettes
http://rossb34.github.io/GARPFRM_shiny/
optionSpec()
optionValue()
impliedVolatility()
computeGreeks()

+ [ ] add option implied volatility using Bisection Method
http://gfoix.com/volatility-smiles-using-r-an-example-with-ubs-equity-options/
http://gfoix.com/wp-content/uploads/2013/11/20131119_ImplicitVolatility_R.R
http://gfoix.com/wp-content/uploads/2013/11/20131119-UBS_OptionData_18Nov.txt
C:/Develop/R/scripts/option_vol.R
C:/Develop/R/scripts/option_vol.txt

# option implied volatility using Bisection Method - very simple illustrative code
http://gfoix.com/volatility-smiles-using-r-an-example-with-ubs-equity-options/
http://gfoix.com/wp-content/uploads/2013/11/20131119_ImplicitVolatility_R.R
http://gfoix.com/wp-content/uploads/2013/11/20131119-UBS_OptionData_18Nov.txt
C:/Develop/R/scripts/option_vol.R
C:/Develop/R/scripts/option_vol.txt

+ [ ] add slides for data.table package
examples for fread/fwrite
https://billyfung.com/writing/2017/08/r-dplyr-vs-data-table/
https://rstudio-pubs-static.s3.amazonaws.com/219545_47274c811c464f1ca1f07959b8243688.html
https://stackoverflow.com/questions/21435339/data-table-vs-dplyr-can-one-do-something-well-the-other-cant-or-does-poorly
https://www.quora.com/Which-is-better-to-use-for-data-manipulation-dplyr-package-or-data-table-library
data.table allows modifying columns by reference (don't need to re-assign the result back to a variable)

+ [ ] slide explaining what is R and how to best use it
R is a computational environment, rather than a programming language.
R is a high-level language written in C++, designed for statistical data analysis.
R is best suited for quick analysis and for prototyping code. 
R is best suited for writing short interactive scripts which call C++ or Javascript programs.
R is best suited as a hub for interacting with other programs, like numerical C++ libraries, interactive Javascript plotting and display programs, databases, etc.
But R is relatively slow, so it's not suitable for writing long programs.
If your program requires writing hundreds of lines of code, then it's better to write it in C++ or Python, and then call it from R.
R frees the user from having to perform mundane basic tasks like memory allocation, type declarations, etc., but this requires a very complex system to handle those basic tasks.
Runtime errors in R are very hard to understand, because they expose the user to the underlying complexity of the R language.

+ [ ] slide explaining why study R
Students should want to take this course despite the fact that it is hard because getting a quant job is even harder.
R and Python are the two main languages for data science and machine learning.
R is used widely used by some of the smartest and best financial quant analysts.
Provide student feedback from SurveyMonkey.

+ [ ] slide explaining how to become a quant
add page to website https://algoquant.github.io/
create personal github page
collaborate with peers on projects
https://en.wikipedia.org/wiki/Mark_S._Joshi
Joshi Becoming a Quant.pdf
Joshi How to Get a Quant Job in Finance.html
https://smile.amazon.com/Quant-Interview-Questions-Answers-Second/dp/0987122827
Quant Job Interview Questions and Answers by Mark Joshi

+ [ ] slide how to get quant job
Jobs for Quants
Combining knowledge of financial models with programming skills can greatly increase the chances of finding a good job.
Financial quants who combine their technical knowledge with market knowledge, are taking over from traditional discretionary traders.

+ [ ] add slide with inherits() example to check if object is a date or not
  if (inherits(end_date, c("Date", "POSIXt", "character"))) {
    x_ts[paste(start_date, end_date, sep = "/")]
  } else if (is.character(end_date)) {
  as.Date(end_date)
  }

+ [ ] check the class of try object to determine if call was successful
tmp_instr <- try(getInstrument(this_symbol, silent=FALSE))
if (inherits(tmp_instr, "try-error") || !is.instrument(tmp_instr)) 

+ [ ] using "recover" function for error handling
options(error=recover)
http://www.burns-stat.com/the-options-mechanism-in-r/
https://stat.ethz.ch/R-manual/R-devel/library/utils/html/recover.html

+ [ ] package readxl for reading Excel
http://readxl.tidyverse.org/articles/index.html
https://blog.rstudio.com/2017/04/19/readxl-1-0-0/

+ [ ] optimization: objective functions can be either:
Maximum likelihood, 
Methods-of-Moments, 
Non-linear Least-Squares, 
Fast ICA, see Broda and Paolella (2008).

+ [ ] explain that the F-test and the chi-squared test are examples of log-likelihood ratios
https://en.wikipedia.org/wiki/Likelihood-ratio_test

+ [ ] adapt RQuantLib examples from:  RQuantLib Integration.pdf and QuantLib book.pdf

+ [ ] adapt machine learning, bootstrapping, cross-validation, topics from:
https://sebastianraschka.com/
https://sebastianraschka.com/blog/2016/model-evaluation-selection-part1.html
https://sebastianraschka.com/blog/2016/model-evaluation-selection-part2.html
https://sebastianraschka.com/blog/2016/model-evaluation-selection-part3.html

+ [ ] download FRED data from Quandl

+ [ ] 3d yield curve with Plotly in R: plotly_yield_curve.R
https://gist.github.com/timelyportfolio/4da9d6b6c89cce26effabccca30124dd
https://bl.ocks.org/timelyportfolio/4da9d6b6c89cce26effabccca30124dd

+ [ ] create plotly interactive yield curve
https://plot.ly/~chris/10796/us-treasury-yield-curve/
package YieldCurve

+ [ ] calibrate interest rate term structure zero coupon yield curve from bond prices  
calculate discount factors and zero rates using function solve()
C:\Research\R\Packages\GARPFRM\R\discountFactorArbitrage.R
C:\Research\R\Packages\GARPFRM\sandbox\test_discountFactorArbitrage.R
http://lalas.github.io/quantitativeThoughts/r/2014/07/13/IR_post.html
http://blog.revolutionanalytics.com/2014/06/quantitative-finance-applications-in-r-6-constructing-a-term-structure-of-interest-rates-using-r-par.html
http://blog.revolutionanalytics.com/2014/07/quantitative-finance-applications-in-r-7-constructing-a-term-structure-of-interest-rates-using-r-par.html

+ [ ] create examples using:
http://moderndata.plot.ly/
http://moderndata.plot.ly/macroeconomic-charts-by-the-fed-using-r-and-plotly/

+ [ ] adapt Heston model
C:\Users\Jerzy\Documents\R\win-library\3.3\NMOF\book\C-OptionCalibration\R

+ [ ] adapt from Clifford Ang: Heston, interest rate term structure, Black-Scholes-Merton, GARCH, Monte Carlo, 
https://www.datacamp.com/courses/bond-valuation-and-analysis-in-r
http://models.cliffordang.com/
http://www.cliffordang.com/

+ [ ] calibrate interest rate term structure zero coupon yield curve from bond prices  
slide #1: money market
slide #2: ED future
slide #3: IR swap
slide #4: interpolating ZC rates
slide #5: bootstrapping and instrument dominance
# from swap curve: first apply forward substitution to calculate discount factors, then calculate zero rates from discount factors
http://quant.stackexchange.com/questions/7402/how-to-derive-yield-curve-from-interest-rate-swap
https://en.wikipedia.org/wiki/Bootstrapping_(finance)
http://www.derivativepricing.com/blogpage.asp?id=4
http://www.derivativepricing.com/blogpage.asp?id=2
# from ED futures: apply convexity correction
Bank of Canada Interest Rate Curve Construction.pdf
Hull Interest Rate Curve Construction.pdf
http://quant.stackexchange.com/questions/14567/what-is-the-swap-curve
http://quant.stackexchange.com/questions/7402/how-to-derive-yield-curve-from-interest-rate-swap
# term structure estimation
https://cran.r-project.org/web/packages/termstrc/index.html
# use package QuantLib function DiscountCurve()
https://cran.r-project.org/web/packages/RQuantLib/index.html
http://quant.stackexchange.com/questions/12707/pricing-a-fixedratebond-in-quantlib-yield-vs-termstructure
http://quant.stackexchange.com/questions/8891/how-to-price-a-bond-at-specified-dates-in-quantlib
# Nelson and Siegel method
https://cran.r-project.org/web/packages/YieldCurve/index.html
NMOF Nelson Siegel Svensson Model Differential Evolution.pdf
# yield curve from futures strip
http://models.cliffordang.com/termstruct.R

+ [ ] Naive Bayes classifier
https://rviews.rstudio.com/2016/11/02/naive-bayes-a-generative-model-and-big-data-classifier/

+ [ ] demonstrate how classification model can be used for linear regression 

+ [ ] create data for logistic regression with donut shape
Demonstrate that in this case SVM and decision trees outperform logistic regression.
Create data for logistic regression from two populations that can be separated perfectly.
Visualize the data using interactive plot.
http://www.edvancer.in/logistic-regression-vs-decision-trees-vs-svm-part1/

+ [ ] add Google Sheets
http://blog.revolutionanalytics.com/2015/09/using-the-googlesheets-package-to-work-with-google-sheets.html

+ [ ] use medcouple as robust skew
https://en.wikipedia.org/wiki/Medcouple

+ [ ] simple option pricing using Monte Carlo
http://models.cliffordang.com/optionsMC.R

+ [ ] simulate price of barrier option by resampling from historical data, instead of Monte Carlo simulation  

+ [ ] apply variance reduction: control variates
https://en.wikipedia.org/wiki/Control_variates

+ [ ] apply Monte Carlo simulation variance reduction techniques using importance sampling
Glass Importance Sampling VaR.pdf
# Paul Glasserman book Monte Carlo Methods In Financial Engineering
http://stackoverflow.com/questions/22060675/r-monte-carlo-integration-using-importance-sampling
http://stackoverflow.com/questions/22001977/monte-carlo-integration-in-r-getting-the-wrong-answer-using-hit-or-miss
http://stackoverflow.com/questions/22214829/r-importance-sampling-to-solve-integrals
http://quant.stackexchange.com/questions/26362/importance-sampling-for-least-square-monte-carlo
http://quant.stackexchange.com/questions/9719/estimation-of-empirical-expected-shortfall-of-a-heavy-tailed-distribution/10039
http://www.modelsandrisk.org/VaR-and-ES/
Glasserman book Monte Carlo Methods In Financial Engineering.pdf
Glasserman Importance Sampling VaR.pdf
Dunbar Importance Sampling Options.pdf

+ [ ] apply variance reduction using importance sampling for Monte Carlo simulation of options  
calculate standard errors with importance sampling
http://quant.stackexchange.com/questions/26362/importance-sampling-for-least-square-monte-carlo
http://quant.stackexchange.com/questions/27600/importance-sampling-for-pricing-options-with-longstaff-and-schwartz

+ [ ] Monte Carlo simulate first passage time of Brownian motion

+ [x] add slide about performing bootstrap of barrier option by resampling from rutils::etf_env$VTI[, 4]

+ [x] add slides for profiling the speed of R expressions using function Rprof and package profvis

+ [x] add slide explaining that if the input time series are not scaled, then PCA analysis is equivalent to the eigen decomposition of the covariance matrix, and if they are scaled, then PCA analysis is equivalent to the eigen decomposition of the correlation matrix,

+ [x] In time_series_multivariate slide Principal Component Analysis, set scale=TRUE and reproduce PCA plots
Explain that PCA is a dimensional reduction technique.
Explain that scaling the input time series improves the accuracy of PCA.

+ [x] rework slide "Time Series from Principal Components" to achieve better fit
Use "scale=TRUE": p_ca <- prcomp(re_turns, center=TRUE, scale=TRUE)

+ [x] add slide for Armadillo

+ [x] add slide Vector and Matrix Calculus in numerical_analysis.Rnw

+ [x] add t-values and p-values to multivariate regression
https://stats.stackexchange.com/questions/5135/interpretation-of-rs-lm-output
http://thecoatlessprofessor.com/statistics/multiple-linear-regression-proofs/

+ [x] add two-tailed p-values in slide Hypothesis Testing

+ [x] add F-test and F-distribution
https://en.wikipedia.org/wiki/F-test#Regression_problems
https://www.riskprep.com/component/exam/?view=exam&layout=detail&id=131
https://onlinecourses.science.psu.edu/stat501/node/295

+ [x] calculate matrix pseudo-inverse using SVD singular value decomposition SVD

+ [x] add linear matrix algebra slides for Cholesky decomposition, SVD, PCA, eigenvectors and eigenvalues, Moore-Penrose pseudo-inverse

+ [x] benchmark matrix inverse: solve() chol2inv()

+ [x] add slide to R_environment: why is R more difficult than other languages?

+ [x] how to run R code from Excel

+ [x] package BERT for run R code from Excel 

+ [x] add to statistics.Rnw classification and Type I and Type II errors in hypothesis tests  

+ [x] add to statistics.Rnw generating pseudo-random numbers using logistic map

+ [ ] create slides for packages ROI (R Optimization Infrastructure) and Rglpk

+ [ ] caret package by Max Kuhn for creating predictive models: give examples
http://caret.r-forge.r-project.org/
http://en.wikipedia.org/wiki/Sensitivity_and_specificity
http://en.wikipedia.org/wiki/Receiver_operating_characteristic
confusion matrix
classification test Sensitivity and specificity
Kuhn Applied Predictive Modeling in R.pdf
Kuhn Applied Predictive Modeling in R.R
http://appliedpredictivemodeling.com/data/
Use German credit data
GermanCredit
Use Direct marketing data
Insurance ownership data

+ [ ] adapt from
https://github.com/rOpenGov
https://github.com/rOpenGov/eurostat
http://ropengov.github.io/r/2015/05/01/eurostat-package-examples/

+ [ ] add Vasicek interest rate model
https://www.r-bloggers.com/fun-with-the-vasicek-interest-rate-model/
http://www.math.ku.dk/~rolf/teaching/mfe04/MathFin.Vasicekestimation.R
https://github.com/cran/SMFI5/tree/master/R

+ [ ] xda + googlesheets
https://qualityandinnovation.com/2016/06/19/using-xda-with-googlesheets-in-r/
https://github.com/ujjwalkarn/xda

+ [ ] slide for anon function has no name GOT png image

+ [ ] compare S3 object oriented system with C++ abstract functions  

+ [ ] example of masked function
create your own sum() and demonstrate that it masks the standard sum()

+ [ ] getting help for function method
explain difference between ?plot and ?plot.xts
the help for the generic function often has no information about the function methods
use fulle name of function method:
?generic_function.method

+ [ ] create animations  
http://nycdatascience.com/basicanimationinr/
http://www.programmingr.com/content/animations-r/
http://www.sumsar.net/blog/2013/12/an-animation-of-the-construction-of-a-confidence-interval/
http://www.sumsar.net/blog/2013/12/t-as-a-mixture-of-normals/

+ [ ] add fast CSV reading and writing
http://blog.h2o.ai/2016/04/fast-csv-writing-for-r/

+ [ ] create example for xgboost extreme gradient boosted ensemble models
https://xgboost.readthedocs.io/en/latest/model.html
http://blog.revolutionanalytics.com/2016/05/using-caret-to-compare-models.html

http://www.scriptscoop.com/
http://www.scriptscoop.com/t/cc400c0c50c8/solving-a-least-squares-underdetermined-system-quickly-r.html

+ [ ] improve slide for traceback()
improve slide for debug() undebug()

+ [ ] add Quantile regression package quantreg

+ [x] improve slide for catools

+ [ ] package readr

+ [ ] matrix multiplication using %%, %*%, %/%, %in%, %o%, %x% operators

+ [ ] C:\Research\R\Tutorials\Kleiber Zeileis Applied Econometrics

+ [x] not necessary: add to method dispatch slides: compare with C++ and other object-oriented languages

+ [x] add to statistics.Rnw: function called confu_sion(), and classification ROC curve Precision Recall Curve (PR Curve)
http://blog.yhat.com/posts/roc-curves.html

+ [x] apply variance reduction: antithetic sampling variables

+ [x] calculate the standard errors of credit portfolio VaR and CVaR under Vasicek model

+ [x] simulate credit portfolio VaR and CVaR under Vasicek model

+ [x] calculating credit portfolio Value at Risk (VaR) and Conditional Value at Risk (CVaR)  
use integrate() and simulation
https://rpubs.com/nhsmith/LossDistribution
http://www.capitalspectator.com/tail-risk-analysis-in-r-part-i/  
https://gist.github.com/jpicerno1/c3af6285713c76a5d124  

+ [x] simulate single-period correlated defaults using Vasicek single factor model

+ [x] add slide about \texttt{"::"} operator

+ [x] add boxplot slide to plotting pdf

+ [x] rename directory and GitHub repository R\FRE6871 to R\lecture_slides

+ [x] create OSX and Linux versions of slide Parallel Computing Using Package in numerical_analysis  
provide code for mclapply() 
http://adv-r.had.co.nz/Functionals.html

+ [x] fix unit vector formatting

+ [x] convert all code from nrow() and ncol() to NROW() and NCOL()  

+ [x] rework regression example in statistics.Rnw  

+ [x] add to hw estimate standard error of regression coefficients using bootstrap method

+ [x] add do.call() example:
do.call(sum, lapply(1:4, function(x) rnorm(4)))

+ [x] fix Sample kurtosis formula in statistics.Rnw p. 11
use formulas from: PerformanceAnalytics PA-Bacon.pdf

+ [x] HW ideas: 
coin flipping Using "while" Loop
my_sqrt
mult_dots
student_scores
error handling with sapply
Fibonacci Sequence Using "while" Loop
create vectorized double barrier option
wrap barrier option in a function
simulate barrier option price

+ [x] finish: Monte Carlo Simulation
Matloff book The Art of R Programming
vectorize the simulation
pre-allocate, pre-compute random numbers
achieved speed at expense of using more memory, 

+ [x] show that rollmean() is much faster than rollapply(zoo_series, width=11, FUN=mean)



############ start scratch

### slides on setting up Git and GitHub

https://help.github.com/articles/set-up-git/

"commit" is a snapshot of your local repository,
"push" uploads your commit to the remote repository,
"branch" creates your own copy of a repository,

Ask Harjinder and Luping to follow the instructions:
How to use RStudio with GitHub

upload RMarkdownCheatSheet.pdf

these are useful links:
http://git-scm.com/docs
http://backlogtool.com/git-guide/en/
http://git-scm.com/book/en/v2
https://support.rstudio.com/hc/en-us/articles/200532077-Version-Control-with-Git-and-SVN
http://r-pkgs.had.co.nz/git.html

http://readwrite.com/2013/09/30/understanding-github-a-journey-for-beginners-part-1
http://stackoverflow.com/questions/2712421/r-and-version-control-for-the-solo-data-analyst
http://www.molecularecologist.com/2013/11/using-github-with-r-and-rstudio/


# get GitHub and Visual Git cheatsheets
http://git-scm.com/docs

# install and configure git on your computer
Windows:
http://git-scm.com/download/win
OS X:
http://git-scm.com/download/mac

four Git terms: 
repository, commit, push, and pull

# Git tutorial
http://git-scm.com/book/en/Getting-Started-First-Time-Git-Setup
http://git-scm.com/book/en/Getting-Started-Git-Basics
http://git-scm.com/book/en/Git-Basics-Tips-and-Tricks
http://www.codeproject.com/Articles/457305/Basic-Git-Command-Line-Reference-for-Windows-Users

# Create an account on GitHub
https://github.com

# GitHub tutorials
# Tip: use GitHub for Windows instead of using git command line
https://help.github.com/categories/bootcamp/
https://help.github.com/articles/good-resources-for-learning-git-and-github/

submit homeworks as gists? - no

# GitHub Video Guides
http://www.youtube.com/GitHubGuides
# fork, pull, & merge
https://help.github.com/articles/be-social
https://help.github.com/articles/using-pull-requests


# Download GitHub desktop for Windows
https://desktop.github.com/


# configure RStudio version control
Tools
Global Options
Enable version control
Git executable
C:/Program Files (x86)/Git/bin/git.exe

# create RSA key in RStudio
view public key
copy public key

verify that RSA key file exists:
file.exists("~/../.ssh/id_rsa.pub")


# Provide GitHub the public key
https://github.com/settings/ssh
click
"Add SSH key"


############ end scratch


### topics to add

# topics to include in FRE6871_Lecture_5:

# datacamp Data Analysis and Statistical Inference
https://www.datacamp.com/courses/data-analysis-and-statistical-inference-mine-cetinkaya-rundel

# datacamp Data Analysis and Statistical Inference
https://www.datacamp.com/courses/data-analysis-and-statistical-inference-mine-cetinkaya-rundel

# datacamp Quandl in R
https://www.datacamp.com/courses/how-to-work-with-quandl-in-r

# datacamp Zivot Computational Finance and Financial Econometrics
https://www.datacamp.com/courses/introduction-to-computational-finance-and-financial-econometrics


# RStudio Setup Guide.pdf

# Leisch lm example
Leisch Creating Packages.pdf

Where does R store packages?
C:\Program Files\R\R-3.1.1\library
C:\Users\Jerzy\Documents\R\win-library\3.1

http://stat.ethz.ch/R-manual/R-devel/library/base/html/libPaths.html
normalizePath(.Library)
.libPaths()
http://stackoverflow.com/questions/2615128/where-does-r-store-packages
the default path is the first of these.
You can override that via an argument to both install.packages() (from inside R) or R CMD INSTALL (outside R).

# Speeding Up R Code - Compiling Functions - microbenchmark()
http://www.noamross.net/blog/2013/4/25/faster-talk.html

Matloff book The Art of R Programming
Using Rprof() to Find Slow Spots in Your Code
Byte Code Compilation

Matloff book The Art of R Programming
vectorized functions that may speed up your code:
ifelse(), which(), where(), any(), all(), 
Misc:
combin(), outer(), lower.tri(), upper.tri(), expand.grid()

Matloff book The Art of R Programming
powers2() example
pre-allocate vectors and matrices, instead of growing them
don't use cbind()
much better to allocate the full matrix
powers4: use outer(X,Y,FUN)?

"Functional Programming and Memory Issues":
R objects are immutable, or unchangeable
if we perform:
z[3] <- 8
the entire vector is recomputed

y <- z
The function tracemem() will report such memory relocations.

# Functional Programming and Memory Issues
Matloff book The Art of R Programming

# Avoiding Memory Copy
Matloff book The Art of R Programming

# Using Rprof() to Find Slow Spots in Your Code
Matloff book The Art of R Programming

# Writing C/C++ Functions to Be Called from R
Matloff book The Art of R Programming


### Cosma Shalizi - very good!

# Shalizi Advanced Data Analysis
C:\Research\R\Tutorials\Shalizi Advanced Data Analysis
# Shalizi Statistical Computing
C:\Research\R\Tutorials\Shalizi Statistical Computing
lecture-09.pdf


###

# data sources of historic corporate financials (balance sheets, income statements, etc)
http://www.reddit.com/r/investing/comments/2n43qg/sources_of_historic_corporate_financials_balance/

# Beneish M Score
http://ycharts.com/glossary/terms/beneish_m_score

# queries:
quantmod Yahoo data frame financial company earnings
r historical corporate balance statement
CapitalIQ
http://www.quanthouse.com/
https://www.capitaliq.com/home/what-we-offer/how-you-can-get-it/advisory-service/consortia-and-data-analytics.aspx
http://www.reddit.com/r/investing/comments/2n43qg/sources_of_historic_corporate_financials_balance/
http://stackoverflow.com/questions/3693189/programmatic-api-for-downloading-historical-financial-statements
http://allthingsr.blogspot.com/2012/10/pull-yahoo-finance-key-statistics.html
http://stackoverflow.com/questions/2614767/using-r-to-analyze-balance-sheets-and-income-statements
http://cran.r-project.org/web/packages/XBRL/index.html


###

Anscombe's quartet in ggplot2

###

# remove rows with duplicate timestamps
http://stackoverflow.com/questions/8865257/r-language-remove-duplicate-rows-from-xts-object
my_xts <- my_xts[!duplicated(index(mt.xts)), ]

# Create ladder of trigger levels
triggers <- do.call(rbind, lapply(-30:30, function(x) rbind(c(0.1*x, -1, -1), c(-0.1*x, 1, 1))))

trading.rules <- list(rules.func="fillOrders.alphaModel", rules.params=triggers)

###


# rdocumentation search tool by Jonathan Cornelissen
http://www.rdocumentation.org/


###


####################################
### emails

TUVM Thank You Very Much!

I would like to ask you a favor.  Quantnet has issued their 2017 rankings of the best financial engineering programs.  NYU Tandon ranked 13 out of 30 programs, which is not bad, but not great either: 
https://www.quantnet.com/mfe-programs-rankings/

At the same time, NYU Tandon has received some very harsh comments, and not all of them are objective:
https://www.quantnet.com/resources/nyu-tandon-school-of-engineering-ms-in-financial-engineering.17/

I think that the biased, negative comments are a disservice to potential students, who are looking for information about programs, so they can make a good choice.  So it would be very useful to have more objective comments on this website:
https://www.quantnet.com/resources/nyu-tandon-school-of-engineering-ms-in-financial-engineering.17/

Could you write an anonymous post with your comments?
What were your favorite courses and instructors?
What courses are missing?  Python?  Statistics?  Derivatives?
What would you improve in the program?
How would you improve the job placement process? 

I'm not asking for you to write a favorable review, just an objective one that contains valuable information for potential students, and feedback for the faculty so that they can improve the program.


####################################
### emails

Thank you, you are very welcome. 
I appreciate you recommending my courses to other students.
Thank you very much for your kind words, and for your hard work!
I'll be happy to provide a letter of reference for you.

Are you proficient with the R language?


# Assignments
You can click on the Assignments tab on the left, view the homework or test file, download it, and finally submit your files from there.

Dear Students,
Welcome to FRE6871 R in Finance.  Please see attached the syllabus. 
I'm glad to see that so many students have registered for this course.  In this course you'll learn the R language, and also how to apply it to finance, like modelling interest rate yield curves using Principal Component Analysis (PCA), building credit scoring models using logistic regression, and pricing options using Monte Carlo simulation.
But I must warn you that many students find this course to be difficult, because the R language is considered to be challenging.  So this course requires good programming skills, and students should therefore have some programming experience with either the R language, or other languages such as C++ or Python.

The course FRE6871 R in Finance is designed as an introduction to R, while FRE7241 Algorithmic Portfolio Management is designed as a followup course for teaching applications of R to portfolio management.  I recommend taking the courses sequentially, first FRE6871 and then FRE7241.

Dear Students,
Please take the following free Datacamp interactive course "Introduction to R":

https://www.datacamp.com/courses/free-introduction-to-r

After you finish the course, you should receive a certificate file from Datacamp.  You can also go to your DataCamp profile page, and scroll to the bottom, where you will see an icon to the courses you finished, and a link that allows you to download the Datacamp certificate file.
Please submit the certificate file to NYU Classes.  It will be due Monday, Sep. 12th, at 12:00 PM.


Dear Students,
Thank you for your hard work in FRE-6871 R in Finance.  I hope your knowledge of R and the new topics in finance you have learned will help advance your career.

I hope you can take FRE-7241 Algorithmic Portfolio Management, which I will be teaching in the first half of Fall 2018.  This course will apply the R language to portfolio management, and will be a great opportunity to apply what you've learned in FRE-6871.  


# homeworks

Dear Students,
If you can't run parallel bootstrap simulation, then just use standard bootstrap.

Please run all the lecture code, and install all the required packages.
Report to me immediately if you have any problems with running all the lecture code, or with installing any of the required packages.

Regards,  Jerzy Pawlowski
NYU Tandon, Finance and Risk Engineering

Dear Students,
Please submit your homeworks and tests using NYU Classes instead of email.
You can click on the Assignments tab on the left in NYU Classes.
From there you can view the assigned homework or test file, download it, and finally submit your files from there.

Dear Students,
You must submit homeworks by the time they are due, or you won't receive full credit.
Homeworks are due as follows:
HW #3 is due 05-04-15
HW #4 is due 05-11-15
Homeworks #1 and #2 are past due.

Dear Students,
I would like to encourage everyone to ask more questions in class.
Please take every opportunity to ask questions, so that you understand every line of code in the lecture notes.
Understanding the code in the lecture notes will help you with obtaining higher scores on homeworks and tests, since they are based on lecture notes.

Dear Students,
Please install the following software:
The R Interpreter:
	http://cran.r-project.org/
RStudio IDE:
	http://www.rstudio.com/products/rstudio/


Please send an email to students asking what is the most convenient time for them for office hours.

Dear Students,
I'm scheduling a make-up class because there are four lectures left in this course, but only three weeks left in the Semester.
I plan to deliver lectures on the following dates:  Nov. 21st, Nov. 24th, Dec. 1st, and Dec. 8th.
There will be a lecture on Monday Nov. 24th, as usual.

Dear Students,
I would like to schedule a make-up class this Friday, Nov 21st from 6PM to 9PM.  Please let me know if this is inconvenient for you.

Dear Students,
The Teaching Assistant is Xirui (Sherry) He (xh521@nyu.edu).
Please email all homeworks and tests to Sherry He.

Dear Students,
Starting next week I will be teaching FRE7241 Algorithmic Portfolio Management.  
This course will apply the R language to portfolio management, and will be a great opportunity to apply what you've learned in the R course.  
Some of the topics covered will be:

The first lecture will be on Tuesday Nov 4th.

Best Regards,  Jerzy Pawlowski
NYU Tandon, Finance and Risk Engineering

# email grading

You received one of the lowest scores, so I think that your final grade of B- is generous and fair.
Most students received very high scores.  You had low scores on two tests.  Your score was close to the median of other scores, so I think that your final grade of B+ is generous and fair.
Course letter grades were derived from the cumulative scores, but there was no fixed formula.  Most students received quite high scores.  Your score was below the median of other scores, so I think that your final grade of B+ is generous and fair.
Thank you for your kind words, and best of luck.


# email to Dawei,
The way to improve your programming skills is by running the lecture code in an R session, analyzing it, and modifying it to better understand how it works (experimenting with the lecture code).  Unfortunately not enough students ask me in class about the lecture code, which must mean that either they find the lecture code totally clear, or they haven't studied it as part of their homework assignments.

The purpose of this course is to teach students how to analyze existing code, and how to adapt it to solve new problems.  This means that you will have to write new code by combining and modifying existing code.  By its nature this can be very challenging.

I carefully design the tests so they can be solved by combining and modifying existing code lecture code.  If you find that some test solutions require code that is unrelated to the lecture code, then please alert me to them.

I have taken your suggestion and provided more detailed instructions for the upcoming test, so that you can start solving the test assignments ahead of time.  I will also provide hints during the test, to guide you along.

The course will have six tests in total, so you still have a chance to improve your average tests scores if you perform well on future tests.


# email

Dear Students,
So there will be no class on Oct. 28.  The first class will be on Tuesday Nov 4th.

# email for test:

Dear Students,
Please install packages: moments, ggplot2, gridExtra, wordcloud

Dear Students,
There will be an in-class test this Monday, September 26th. 
The test will start at 6:30 PM, and will last 60min until 7:30 PM.
I will upload the test file at 6:30PM to NYU Classes.
The lecture will start at 6:00 PM, as usual.  
You must bring your laptops and be able to log into WiFi.

The test will be based on lecture notes, so please study the topics below:

Classifying numeric data into categories according to breakpoints using function findInterval().
Splitting data frames according to categories using function split().
Performing the split-apply-combine procedure using function sapply() and an anonymous function. 
Study slide 38 "The lapply() Functional" in the functions.pdf, and slide 39 "The sapply() Functional", and analyze the code.
Plotting scatterplots using functions plot(), points(), and text().
Creating wrapper functions designed to validate their arguments.
Performing for(), apply(), and sapply() loops over matrices and data frames. 
Performing while loops instead of for() loops. 

You will be required to create a wrapper for function sum(), called sum_rob(), which performs validation of its dots "..." argument, and returns NULL if the argument isn't valid. 
The function sum_rob() should accept the same arguments as function sum(): dots "..." argument and "na.rm=FALSE". 

The function sum_rob() should validate its dots "..." argument to check that it's either a numeric atomic object, or a list containing numeric objects, and return its sum.  
If it's neither, then it should return NULL.
The function sum_rob() should pass its "na.rm" argument to the "na.rm" argument of function sum(). 

There are many ways of implementing function sum_rob().
You can use functions list(), unlist(), is.list(), is.numeric(), length(), c(), do.call(), return(), and sum().

Call sum_rob() as follows, to verify that it works correctly.
You should get the following results:

sum_rob(1:9)
#   [1] 45
sum_rob(matrix(1:9, 3))
#   [1] 45
sum_rob(list(1:9, 3))
#   [1] 48
sum_rob(1, 2, 3, NA)
#   [1] NA
sum_rob(1, 2, 3, NA, na.rm=TRUE)
#   [1] 6
sum_rob(1, 2, 3:5, NA, na.rm=TRUE)
#   [1] 15
sum_rob(iris[, 4])
#   [1] 179.9
sum_rob(iris[, 5])
# NULL
sum_rob("a")
# NULL
sum_rob(list(1, 2, 3))
#   [1] 6
sum_rob(list(1, 2, 3, NA))
#   [1] NA
sum_rob(list(1, 2, 3, NA), na.rm=TRUE)
#   [1] 6
sum_rob(list(1, 2, 3, "a"))
#   NULL



Subsetting data frames using logical operators. 
Using function which() to extract elements of data frames. 
Using anonymous functions in apply() loops. 
Omitting NA values in loops. 
Performing vectorized operations over vectors, matrices, and data frames.
Benchmarking the CPU time used by R operations using package microbenchmark.
Defining functions with the dots "..." argument. 
Passing arguments through the dots "..." argument of apply(). 

Performing operations in the R workspace: listing, removing, and saving objects, changing and displaying options settings. 
Creating, subsetting, and substituting strings. 
Creating vectors of strings from numeric vectors and strings using paste(). 
Assigning names, row and column names, and attributes to objects. 
Subsetting elements of vectors and matrices. 
Coercing vectors into matrices.
Modifying object attributes.

Extracting regression statistics from their summary. 
Creating formulas from columns names. 
Creating a design matrix data frame from vectors. 
Performing regressions in an sapply loop. 
Producing warning and error conditions. 
Reading data from CSV files. 
Performing aggregations over matrix columns. 
Performing error handling within apply loops. 
Changing the warning "warn" level. 
Creating warning and error handlers. 
Writing text to files using cat(). 
Flatten lists into vectors and matrices using do.call() and cbind(). 
Study the code in the slide titled "Influence of Noise on Regression Another Method" in FRE6871_Lecture_5.pdf.

Coercing factors into vectors. 
Performing the split-apply-combine procedure using sapply() and lapply() loops. 
(study slide 32 in expressions.pdf - download the newest version from NYU Classes.)
Performing operations inside with() environments. 
Transposing matrices. 
Multiplying matrices by vectors, and multiplying vectors by matrices. 
you will be using the student_scores data frame from homework #3 

Plotting histograms
Calculating contingency tables. 
reading files containing bad data elements,
coercing data frames and factors to numeric,

You will need to use the following functions:
for(), apply(), sapply(), integer(), seq_along(), c(), unlist(), max(), min(), matrix(), sample(), paste0(), ncol(), 


rnorm(), mean(), sd(), ls(), glob2rx(), save(), rm(), options(), paste(), paste0(), strsplit(), gsub(), which(), names(), colnames(), c(), list(), matrix(), dim(), attributes(), 

sapply(), data.frame(), warning(), options(), read.csv(), tryCatch(), do.call(), cbind(), cat(), as.numeric(), sum(), and anonymous functions. 
with(), apply(), lapply(), tapply(), unique(), as.vector(), levels(), t(). 
with(), hist(), 
tapply()
for(), apply(), sapply(), length(), seq_along(), unique(), sum(), table(), ifelse(), microbenchmark(). 

You will need to use the following functions:
read.csv(), class(), rownames(), apply(), sapply(), which(), as.vector(), as.numeric(), is.na(),

functions for manipulating strings, such as "paste", "substring", and "strsplit",
how to coerce strings and numeric variables to date-time objects,
functions from package lubridate, 
how to write your own functions,
control statements "if" and "else",

Dear Students,
You are free to read and copy code from all the lecture notes, the internet, or any other sources, except you're not allowed to consult with or to copy from each other.
Hint: the lecture notes contain most of the code needed to finish the test.

Regards,  Jerzy Pawlowski
NYU Tandon, Finance and Risk Engineering

Dear Students,

Study how to merge zoo objects.
Study how to rename column names in zoo objects.
Study data aggregation using the functions rollapply(), rollmean(), and rollmedian().
Study the options of the aggregation functions, especially the "align" option.  Which value of "align" corresponds to aggregating values from the past?
Study how to write and read from comma-delimited CSV files using the functions read.zoo() and write.zoo().
Study how to plot two lines on the same plot.
Study how to plot with two "y" axes.
Study how to divert graphics output to graphics files.

The lecture will start at 6:00 PM, as usual.  

The test will use the results of the first test, so please study the solution code from the first test.

Dear Students,
Today there will be an in-class test.  
Please make sure to bring your laptops and log into WiFi.
I will email the test at 6:30PM via NYU Classes.
You will be required to produce R code and email it to the TA, Imane Sanhaji (imane.sanhaji@nyu.edu).
To get full credit, your R code must be complete and run in an R session as you submitted it.
You will have access to all notes, internet, and any other sources, except you're not allowed to consult with or to copy from each other.

Please review the following topics:
converting character strings into date-time objects,
creating time index,
creating zoo objects,
subsetting time series objects,
plotting zoo objects.

Please review the following functions:
paste(), substring(), as.POSIXct(), as.Date(), index(), window(), plot(), colnames().

Regards,  Jerzy Pawlowski
NYU Tandon, Finance and Risk Engineering

Dear Students,
Below are the instructions for today's test.
You are free to read and copy code from all the lecture notes, the internet, or any other sources, except you're not allowed to consult with or to copy from each other.

Please email your R code and the file called "zoo_series.txt" to the TA no later than 6:50 PM, Imane Sanhaji (imane.sanhaji@nyu.edu).

Instructions:
load package Ecdat, to be able to access Garch data,
the field Garch$date contains dates as strings in the format "yymmdd",
from field Garch$date create a vector of strings in the format "yyyy-mm-dd", using nested calls to paste() and substring(),
create a date-time index called "zoo_index", by coercing the vector of strings into a vector of POSIXct dates using as.POSIXct(),
create a zoo object called "zoo_series" from field Garch$dm and from zoo_index, using zoo(),
count the number of NA values in "zoo_series" using is.na(),
remove any NAs using na.omit(),
save "zoo_series" to text file called "zoo_series.txt", using write.zoo(),
subset the "zoo_series" object to the dates from "1982-01-01" to "1986-01-01", using either logical operators or window(),
plot "zoo_series" and add a title containing the word "rate" and the name of field Garch$dm, using paste() and colnames(),

Dear Students,
The lecture today will start at 6:00 PM, as usual.  The test will start at 6:30 PM, and will last 20min until 6:50 PM.

### grading and partial credit policies

The reason that the student's code may not reproduce the exact expected values, is because they didn't reset the random number generator.
In that case you need to analyze their code to determine if it's correct or not.
The most important criterion is if the student's code makes basic sense, or if they're lost.  You have to make that judgement.  
Feel free to ask me for advice in specific cases.

You can be generous with awarding partial credit, even when the student's code doesn't reproduce the exact expected values, as long as the code is basically correct, except for some minor errors.

The homeworks and tests contain several parts, with each part assigned a maximum score. 
Please grade each part separately, assign it a numerical score, and add up all the scores to get the total homework or test score.
Enter the total scores for the homeworks and tests into the attached spreadsheet.  

Write the actual scores next to the maximum scores in the students' *.R files, and email them back to students.  But wait until after the deadline and after all students have submitted their *.R files
Please let me know when you've received all the homeworks each week after they're due so that I may post the solutions.

# Please apply the following partial credit grading policies.
Paste the students' code into an R session to verify that it produces the correct answer (output).
Maximum scores should be given only for complete code that follows the instructions, and that produces the correct answer when pasted into an R session.  Sometimes students are required to use specific functions.  In that case you should inspect their code to verify that they used those specific functions.  The students' code doesn't have to be exactly the same as the solution code, since many different solutions are often possible.
Give partial credit equal to about 2/3 of max score for code that is almost right: it doesn't produce the correct answer, but produces a slightly different answer due to minor errors.  Give partial credit of about 1/3 of max score for code that has several major errors (wrong function or variable), but that has some correct code that can be useful for producing the correct answer.  Give zero score for code that's completely incorrect and useless for producing the correct answer.

# Instructions for homeworks and tests.
Sometimes the instructions require you to use specific functions to write your solutions.
When the instructions say "You can use the functions ..." it is just a suggestion to help you.  You can use any functions you choose, as long as your code produces the correct answer (output).
When the instructions say "You must use the functions ..." it means you must use the specific functions.  You won't get full credit if you don't use the specified functions.

# Plagiarism
Students are allowed to copy code from course slides, books, or any online sources.  But students must provide references to any external sources from which they copy code (such as links, or titles and page numbers).
Students are not allowed to copy code from each other.  Please alert me if you see that different students have submitted close to identical code.


###############
### homework topics existing best

# Summary: Modify the following incorrect for() and sapply() loops.

# Summary: Perform logistic regression to forecast 
# if a subject is a student or not based on default, 

# Summary: Calculate the p-values of the t-test, Wilcoxon-test, 
# and KS-test as a function of the mean separation between two 
# samples.

# Summary: Demonstrate that scaling the data in PCA analysis 
# reduces the mean-squared-error (MSE) of the solved time series 
# compared to the original.

# Summary: Download data from FRED for rates and 
# currencies, and perform PCA analysis.

# Summary: Perform Monte Carlo simulation of Brownian motion, 
# to estimate the price of a barrier option.

# Summary: Estimate the probability of a Brownian motion
# path crossing a barrier by performing multiple simulations.

# Summary: Perform a double barrier simulation.

# Summary: Calculate the default correlation between 
# Boolean vectors representing default events (instead of 

# Summary: Calculate the standard errors of regression
# coefficients using parallel bootstrap simulation.

# Summary: Apply antithetic sampling to calculate 
# the standard errors of VaR and CVaR using bootstrap 
# simulation.

# Summary: Calculate the standard errors of VaR and
# CVaR for different values of correlation, using 
# parallel bootstrap simulation.

# Summary: Calculate the standard errors of the standard 
# deviation and the median absolute deviation (MAD) estimators 
# for VTI stock returns, using parallel bootstrap and antithetic 
# sampling.

# Summary: Calculate a vector of CVaRs for different 
# values of correlation, by integrating over the tail 
# of the Vasicek loss density function.

# Summary: Calculate the quantiles of the t-distribution with 
# different degrees of freedom, by using Monte Carlo simulation 
# and also using vectorized operations.

# Summary: Create a functional which calculates the 
# outer product of a function over two vectors, that 
# for vector arguments is equivalent to outer(),

# Summary: Calculate the standard errors of regression 
# coefficients using bootstrap simulations. 

## fundamental data munging

# Summary: Create a data frame of value ETFs.

# Summary: Perform aggregations on a data frame of panel 
# data using the split-apply-combine procedure. 

# Summary: Read a data frame containing student homework
# and test scores, and perform the split-apply-combine
# procedure in order to assign letter grades.

# Summary: Re-order the rows of a data frame according
# to the order of one of its columns.

# Summary: Create a function which calculates the sum
# of its dots argument, similar to function sum().

# Summary: Create a function called find_interval(),
# that reproduces the function findInterval(), using 
# two different methods.

# Summary: Create a function called lag_it() which applies
# a lag to vectors and matrices.

# Summary: Collapse a list of integer vectors into a matrix.

# Create the character string "y = x1 + x2 - x3 - x4" 
# from the characters "x", "y", "=", "+", "-", and the 
# vectors 1:2 and 3:4.

# Summary: Perform for() and sapply() loops over a vector,
# and then perform the equivalent vectorized operations

# Summary: Scrub a vector of symbols.

# Summary: Subset the elements of a list of vectors, 
# and extract the second element of each list element.

# Summary: Extract and multiply vector elements.

# Summary: Calculate the Fibonacci Sequence using
# a while loop.

# Summary: Coerce a vector called mat_rix into a matrix 
# with two columns.

# Summary: Replace the first and third columns of a matrix 
# with each other. 

# Summary: Calculate the indices of the TRUE elements 
# of a Boolean vector, similar to the integer vector 
# produced by function which().

# Summary: List the class and dimension attributes 
# of objects in the environment rutils::etf_env.

# Summary: Perform loops and operations on environments.



###############
### homework and test ideas

+ [ ] perform double barrier simulation using vectorized functions

+ [x] Calculate the standard errors of the standard deviation and the median absolute deviation (MAD) estimators for VTI, using parallel bootstrap and antithetic sampling

+ [ ] Add to "Download data from FRED for rates" - add bad symbols and download in while loop from FRED, just like Tiingo
Add a bad symbol to list of symbols and download data in lapply loop using getSymbols()
Wrap getSymbols() in trycatch() 

+ [ ] perform t-test for a large sample and improve speed
adapt from Case study: t-test:
http://adv-r.had.co.nz/Profiling.html#t-test

+ [ ] in the existing test: Perform logistic regression to forecast if a subject is a student or not,
Split the dataset and perform the forecast out-of-sample.

+ [ ] Perform Monte Carlo simulations to estimate the price of a barrier option 
One type of barrier option is a knock-out (down and out) call option.
The knock-out call option pays out the positive difference between the final price minus the strike, but only if the intermediate price never falls bellow the knock-out price.
Perform bootstrap simulation to estimate the standard error of the estimated price.
Apply antithetic sampling to the barrier option simulation to reduce the standard errors.
First write a while() loop and run it in parallel with parLapply()
Then create a fully vectorized version using function matrixStats::colCumsums().
Finally write the code using RcppArmadillo.

+ [ ] reproduce function matrixStats::colCumsums() using RcppArmadillo

+ [ ] same as above: Calculate the standard errors of the quantiles for the normal distribution, using Monte Carlo simulation - needs more work
Demonstrate that for the normal distribution, the standard errors of the higher quantiles increases relative to their value (higher moments are increasingly noisy).
Perform bootstrap in parallel to estimate the standard errors.
Therefore measuring risk at a higher confidence interval is useless.
Demonstrate that when the confidence level is very high, the finite sample size causes the standard errors to become as large as the VaR and CVaR themselves.

+ [ ] create an Rcpp function that multiplies a vector by a number

+ [ ] perform split-apply-combine procedure using the first column of a matrix
# Create synthetic data
vec_tor <- sample(1:5, 20, replace=TRUE)
mat_rix <- matrix(runif(40), nc=2)
mat_rix <- cbind(vec_tor, mat_rix)
# calculate sum-products of sub-matrix columns
sapply(X=unique(mat_rix[, 1]), FUN=function(x) {
  foo <- mat_rix[which(mat_rix[, 1] == x), -1,  drop=FALSE]
  sum(apply(foo, 1, prod))
})  # end sapply

+ [ ] needs more work to simulate many random samples: 
simulate two vectors of random normal data with slightly different means, and calculate the distribution of p-values of the t-test, Wilcoxon-test, and the KS-test as a function of the difference in the means.
Calculate the p-value distributions for equal means, and then calculate the Type I and Type II error rates. 
Calculate the classifier sensitivity, i.e. the percentage of positives correctly classified as positives.
Calculate the classifier specificity, i.e. the percentage of negatives correctly classified as negatives.
Repeat for slightly different means.

+ [ ] 
a <- c(1,1,1,1,2,2,2,2,2)
b <- c(10,12,15,12,NA,30,42,38,40)
s <- split(b, a)
lapply(s, mean, na.rm=TRUE)

+ [x] Scrub a vector of symbols to remove duplicates

+ [x] Replace the first and third columns of a matrix, using only subsetting and the function c()

+ [x] Subset elements of a list of vectors, and extract the second element of each list element using "["

+ [ ] permutation puzzle
C:\Develop\R\scripts\permutations.R

+ [ ] coin flips puzzle
C:\Develop\R\scripts\coin_flips.R

+ [ ] create R code with errors and ask students to fix them:
install.packages(zoo)
foo <- as.list(1:11)
3*foo[2]
# get the names of new instruments in data_frame
data_frame <- data.frame(new_instr=(rnorm(10)>0), 
    instr_name=paste0("instrument", 1:10))
data_frame$instr_name[[data_frame$new_instr]]
data_frame[, instr_name][data_frame$new_instr]
# apply loop over rows of the data frame
apply(data_frame, MARGIN=1, function(instru_ment) {
    cat("processing instrument:", instru_ment["instr_name"], "\n")
    cat(instru_ment["new_instr"], "\n")
    if (instru_ment["new_instr"])
        instru_ment["instr_name"]
    else
        NULL
})  # end apply

+ [ ] create a data loading function and call it in apply loop
load buggy instrument data, scrub it, and write it to file 
wrap function in tryCatch()
write a tryCatch() exception handler for the loop, to write errors to error file, and warnings to warning file
use cat()

+ [ ] create a function called print_lm() with two print() statements and a summary(), and point out that the first print() statement and summary() don't print anything  
Ask students to modify print_lm() so that it displays in the console both print() statements and also summary().

+ [ ] create custom regression function which returns regression object, and a summary() function for the regression object  

+ [ ] create a function that takes a char string "sym_bol"
read file named "my_var.RData" that contains a single variable called "my_var"
call the function with an argument "my_var" 
plot "my_var"
assign a char string "my_var" to a variable called "sym_bol"

+ [ ] create function that:
takes vector of strings as input
assigns values to them
saves them in separate files

+ [ ] create github account for homeworks and ask students to send pull requests with their homeworks

+ [ ] create R notebook with plots
http://rmarkdown.rstudio.com/r_notebooks.html

+ [ ] create VBA script to write data from Excel into CSV, run R code, and read into Excel from CSV produced by R

+ [ ] modify ioslides presentation in R markdown

+ [x] perform sorts on the data frame in CRSPpanel.txt

+ [x] calculate the Pearson default correlation between Boolean vectors representing default events
Plot the default correlation as a function of asset correlation and default probability.

+ [x] fix the following for() and sapply() loops so that they change the values of vec_tor

+ [x] Calculate the standard errors of VaR and CVaR for different numbers of simulations (num_simu), using parallel bootstrap simulation.
Demonstrate that for a small number of simulations, the standard errors to become as large as the VaR and CVaR themselves ?
Modify the function calc_var() so that it accepts a vector of num_simu values, instead of a vector of conf_levels values.

+ [x] create a function called find_interval() that is equivalent to findInterval()
find_interval <- function(x, vec) {match(TRUE, x < vec) - 1}

+ [x] perform PCA analysis on rates and currencies
Download data from FRED for sym_bols into an environment env_rates:
sym_bols <- c("DGS1", "DGS5", "DGS20", "DEXJPUS", "DEXUSEU", "DEXUSUK")
Calculate an xts time series of all 6 rates called rate_s.
Calculate an xts time series of differences in rates called re_turns.
Perform PCA analysis on re_turns.
Calculate the correlations between the principal component time series.

+ [x] apply antithetic sampling to calculate the standard errors of VaR and CVaR using bootstrap simulation

+ [x] calculate the original time series data input into PCA, from the time series of principal components, by inverting the loadings matrix, 
Use only the first few principal components with the largest eigenvalues which sum up to 80% of the total variance explained.
Perform the calculation twice, once with scaling of the input returns, and once without scaling (use scale argument of prcomp())
Demonstrate that scaling of returns reduces the mean-squared-error (MSE) of the solved time series compared to the original.
Apply the rule to retain the principal components with the largest eigenvalues which sum up to 80% of total variance explained.

+ [x] create two vectors of random normal data with slightly different means.
Calculate the p-values of the t-test, Wilcoxon-test, and the KS-test as a function of the difference in the means.

+ [x] forecast student status in ISLR::Default from other variables
plot student status as function of credit balance

+ [x] calculate a vector of CVaR for different values of correlation, by integrating over the tail of the Vasicek loss density function

+ [x] calculate the standard errors of VaR and CVaR for different values of correlation, using parallel bootstrap simulation

+ [x] calculate generalized inverse from eigen decomposition

+ [x] microbenchmark cross_prod with inner_prod

+ [x] improve lag_it(), so it also accepts matrices using apply()

+ [x] plot the density of the logistic map without the inverse cosine function transformation  

+ [x] create zoo plot of yield curves

+ [x] apply PCA to interest rates

+ [x] create plotly of 20yr and 10yr Treasury rates

+ [x] calculate the standard errors of CVaR using parallel bootstrap

+ [x] calculate vector of CVaR using sapply() loop and integrate()
use the slide: Conditional Value at Risk Under the Vasicek Model

+ [x] calculate vector of CVaR using sapply() loop and simulation
use the slide: Simulating CVaR Under the Vasicek Model

+ [x] calculate standard errors of VaR and CVaR using bootstrap

+ [ ] transform uniform random numbers into normal random numbers with given mean and standard deviation
use qnorm(runif(100))
or Box-Muller transform
http://stats.stackexchange.com/questions/132556/advantages-of-box-muller-over-inverse-cdf-method-for-simulating-normal-distribut
x <- sqrt(-2*log(u))*cos(2*pi*v)
y <- sqrt(-2*log(u))*sin(2*pi*v)

+ [ ] modify run_reg() so that it produces error, instead of producing error in loop 
# Summary: Perform regressions in an sapply loop, 
# and produce an error when the p-value is greater 
# than the significance level. 

+ [ ] use slides "Influence of Noise on Regression" and "Omitted Variable Bias"
in loop increase weight of omit_var and extract vectors of DW tests

+ [ ] Perform error handling within an sapply loop. 

+ [ ] vectorize code of function preda()
predc: use differences of cumsum()
from: Matloff book The Art of R Programming, p. 37

+ [ ] make code of function findruns() faster
from: Matloff book The Art of R Programming, Finding Runs of Consecutive Ones

+ [ ] create new variables from list of column names of EuStockMarkets
use assign(), and apply() or sapply(), not for() loop

+ [ ] create a function with a bug and ask to fix the bug

+ [ ] create vector of four names using paste()
vec_names <- paste0("var", 1:4)
# create a named vector of four random values using rnorm()
vec_rand <- rnorm(4)
# assign names to vector from vec_names (?)
names(vec_rand) <- vec_names
# create four variables from the vector of four names and assign them to the vector of four random values
# use a for() loop and assign()
for (var_name in vec_names) {
# assign column values to column names
  assign(var_name, vec_rand[var_name])
}  # end for
# or
for (in_dex in 1:4) {
# assign column values to column names
  assign(vec_names[in_dex], vec_rand[in_dex])
}  # end for

+ [ ] ideas for test:
create toy script:
convert EuStockMarkets to zoo
introduce NAs
save it to file
read data from file in lapply loop
file has bad data and loop bombs
assignment:
fix loop using tryCatch
lapply loop returns list
flatten list to zoo

+ [ ] calling nested functions with dots '...' argument before or after dots

+ [ ] functional called by sapply loop takes dots '...' argument and passes dots to function
sapply passes argument to functional
similar to optim example 
regression example

+ [ ] sapply loop sometimes returns list
use vapply instead
http://r.789695.n4.nabble.com/sapply-returning-list-instead-of-matrix-td4684523.html
a <- function(i) { list(1) } 
b <- function(i) { list(1,2) } 
ll <- sapply(seq(3), a, simplfy="list") 
mm <- sapply(seq(3), b) 
class(ll) 
class(mm) 

+ [ ] sapply vs vapply example
http://stackoverflow.com/questions/9668456/why-does-sapply-return-a-list
sapply(LETTERS[1:3], function(x) {x == "B"}) # F, T, F
sapply(LETTERS[0], function(x) {x == "B"})   # list()
vapply(LETTERS[1:3], function(x) {x == "B"}, logical(1)) # F, T, F
vapply(LETTERS[0], function(x) {x == "B"}, logical(1))   # logical()

+ [ ] create a function that downloads and saves data for a list of symbols
use functions:	Filter, assign, get, as.name, 

+ [x] simulate homogeneous (uniform) portfolio using vectorized functions, and plot histogram of defaults, then add curve of Vasicek model

+ [x] simulate correlated defaults under Vasicek model, and calculate vector of number of defaults, first using sapply(), then using vectorized functions
use microbenchmark


### homeworks deprecated

+ [ ] Calculate the standard errors of the mean and the median using bootstrap simulation, for the t-distribution with different degrees of freedom
Already bootstrapping the quantiles

+ [ ] perform bootstrap of barrier option by resampling from rutils::etf_env$VTI[, 4]
? Already in slides: "Bootstrapping From Time Series of Prices"


###


### unfinished slides:

Warning and Error Messages in Functions

Exploring Generic Functions - UseMethod()

Infix Functions

Simple Regression Example

Plotting a Regression

Anonymous Functions

lapply Examples

The split-apply-combine Procedure

The split-apply-combine Procedure ramnathv

Compare for() Loops With split-apply-combine Procedure

Examples of split-apply-combine Procedure



### modify and rework slides:

Reading and Writing Data Frames



### expand slides:

add extra slides on tryCatch
add slide with very simple example
divide existing tryCatch slide into two
do handlers need "return" statement?
how does "return" statement in handlers affect output?


### improve slides:

scatter plot (regression)

formula plot
plot(Ozone ~ Wind, data=airquality, pch=as.character(Month))

plot with two y axis

plot in multiple panes

plot multiple ts in multiple panes

adding points() to line plot

points(x=rep(100,10), y=seq(0,90,10), pch=seq(1,20,2))

add slide for plotting two ts zoo.msfteur in two panes

points, 
lines, 
abline, 
axis, 
title, 
legend,
text,


## add slides:

# explain use for t-statistic, and where it's coming from

# regression spurious
http://eranraviv.com/spurious-regression-illustrated/

# Martin A. Lindquist - very good Regression Analysis lectures with R code
http://www.stat.columbia.edu/~martin/
Lindquist Model Diagnostics for Regression.pdf


# vectorization
# create examples showing dumb loops versus smart code using vectorized R functions
# create examples showing loops are needed for path dependent problems
http://blog.revolutionanalytics.com/2014/04/a-look-a-r-vectorization-through-the-collatz-conjecture.html
http://cartesianfaith.com/2014/01/06/how-to-use-vectorization-to-streamline-simulations/
http://www.noamross.net/blog/2014/4/16/vectorization-in-r--why.html
Teetor Fast(er) R Code.pdf


# script for reading panel data from *.csv file and creating xts object
# panel data consists of prices by ticker symbol and dates
C:/Develop/R/scripts/funcDevelop.R

# data pivoting
Cross Tabulation with table and xtabs

## error handler functions that return a function
an application of functions that return a function
example showing the difference between returning a value and returning a function
only functional can return a function
use MySqrt function that throws error if arg is negative
C:/Develop/R/scripts/funcDevelop.R


## multiple slides about doing things the R way:
allocating instead of growing
apply vs for
vectorized funtions vs apply
# emphasise syntax and speed


## return parsed but unevaluated expressions in a list
parse()
# convert expressions into character strings - inverse of parse()
deparse()
# convert arguments into a vector of strings
deparse(substitute(var))
deparse(substitute(x)) returns [1] "x"
# the use of 'deparse(substitute())' is strongly discouraged
http://stackoverflow.com/questions/5542945/opposite-of-rs-deparsesubstitutevar
as.expression("x") works to get the variable from the variable name

# reverse is:
eval(parse(text=...))
or
eval(substitute(...))


# Fix an Object
fix()

## String Formatting Command
sprintf("%5.4f", pi)


## function debugging
debug()
browser()
stopifnot()
return()

# formatting colnames with paste
paste0()

# introduce and review
Package tseries
Class timeSeries
Rmetrics suite


### introduce ts Time Series Objects

# Reading and Writing zoo Time Series to csv files

# subsetting zoo object

# ts aggregation
calculate weekly, monthly returns

discuss yearfrac index
index is a number:	2014.2123
convert to date
as.Date(365*(index(zoo.dax)-1970))

# calculate trailing average

# count number of rows or columns

# Create slide summarizing Time series: Implementations:
"ts" (base): regular "numeric" time index (e.g., annual, quarterly, monthly),
"its" (its): irregular time index of class "POSIXct",
"irts" (tseries): irregular time index of class "POSIXct",
"timeSeries" (timeSeries): irregular time index of class "timeDate",
"zoo" (zoo): regular or irregular time index of arbitrary class.
"xts" (xts): built on top of "zoo", with specialized infrastructure for
time indexes of class "Date", "POSIXct", "chron", "timeDate",
"yearmon", "yearqtr", . . .


# create overview of functions:
is.*
as.*

# AER package includes replication datasets for econometrics

# ReturnAnalytics
For example packages which are part of the \texttt{ReturnAnalytics} project,\\
\hskip1em\url{https://r-forge.r-project.org/projects/returnanalytics/}\\
\hskip1em\url{https://r-forge.r-project.org/R/?group_id=579}\\


# list.files()
List the Files in a Directory/Folder
dir(pattern="csv")


with plotmath mathematical annotations

with par()
describing plot() params par()

list of Graphical Parameters
https://stat.ethz.ch/R-manual/R-devel/library/graphics/html/par.html


# how to create empty plot
plot(x=1:10, y=1:10, xlab="", ylab="", type="n")
add text with annotation
text(5.0, 5.0, expression(beta==11))
text(6.5, 0.28, expression(paste(beta==5)))

pca and barplot


###

sort()
order()

# operators

# simple pipe operator
http://active-analytics.com/blog/magrittr-in-one-line/

http://stackoverflow.com/questions/1295955/what-is-the-most-useful-r-trick

which()
match()

subset()

dput()


###

https://www.linkedin.com/groups/R-Project-Statistical-Computing-77616


###

R --vanilla <xyz.rxyz.out

explain function:	data()

data(airquality, package="datasets")
class(airquality)
air_ozone <- airquality$Ozone
med_ozone <- median(air_ozone, na.rm=TRUE)
low_ozone <- (air_ozone < med_ozone)
mean(low_ozone, na.rm=TRUE)

http://adv-r.had.co.nz/Computing-on-the-language.html

http://faculty.nps.edu/sebuttre/home/RIndex.html

http://en.wikibooks.org/wiki/Data_Mining_Algorithms_In_R


###

add:

setting up RStudio projects

Installing Packages from GitHub

:: function
zoo::rollmedian
::: function
zoo:::rollmedian


script files
source() scripts

Startup

Sys.getenv()
R.home()

Sys.setenv(TZ="GMT")
Sys.getenv("TZ")


setting R options
r environment variables

.packages(all=TRUE)  # display installed packages

installed.packages()  # get info on all packages (produces a lot of stuff)

# another way to display installed packages
packinfo <- installed.packages(fields=c("Package", "Version"))
packinfo[,c("Package", "Version")]
packinfo["xts",c("Package", "Version")]

objects()  # display currently loaded objects

search()  # display loaded packages


plotting

no type declaration of variables in R

logical

factor analysis

keywords

vectors

load
invisible

error messages

NA/NaN argument

create library and document with Roxygen

debug

Pry open the covers of R
library(pryr)
https://github.com/hadley/pryr

codetools

http://adv-r.had.co.nz/Expressions.html

Regular expressions in R vs RStudio
http://robinlovelace.net//r/2014/04/14/regex-in-R-RStudio.html



###

read
Wickham Split Apply Combine for Data Analysis

use combination of take-home homeworks and also online tests in class
online tests in class should be say 20min and should test basic syntax skills
create website with online tests
Google create online interactive software tests
http://worldclass.io/
http://www.classmarker.com/
http://www.proprofs.com/quiz-school/

# R exams package
http://www.r-statistics.com/2012/12/generation-of-e-learning-exams-in-r-for-moodle-olat-etc/
http://cran.r-project.org/web/views/ReproducibleResearch.html

# Free Tools for Teachers
http://elearningindustry.com/321-free-tools-for-teachers-free-educational-technology


### incorporate:

# Data Science with R
C:\Research\R\Tutorials\OnePageR Data Science
http://onepager.togaware.com/

# Shalizi Advanced Data Analysis book
https://www.coursera.org/course/rprog

# Michael Clark (Notre Dame): good tutorials
C:\Research\R\Tutorials\Michael Clark
http://www3.nd.edu/~mclark19/projects.html
http://www3.nd.edu/~mclark19/code.html
https://github.com/mclark--

# Winston Chang? - very good tech insights
http://www.jottr.org/
http://www.jottr.org/?view=magazine

# magrittr examples
http://timelyportfolio.blogspot.com/2014/06/a-whole-new-r-world-with-chains-and.html
http://timelyportfolio.github.io/rCharts_factor_analytics/factors_with_new_R.html
http://martinsbioblogg.wordpress.com/2014/03/27/more-fun-with-and/
http://australianbioinformatics.net/the-pipeline/2014/7/14/r-the-getting-of-wisdom.html#.U8UphPldWYI
https://gist.github.com/anonymous/0c69b019d0b4f6ae5050

# reshape2 package for melting and casting data frames (or arrays)
https://github.com/hadley/reshape
# reshape2 plus ggplot2 tutorials
http://seananderson.ca/2013/10/19/reshape.html
http://martinsbioblogg.wordpress.com/2013/01/27/a-slightly-different-introduction-to-r-part-ii/


### data validation
### tidyr for data scrubbing
http://cran.r-project.org/web/packages/tidyr/vignettes/tidy-data.html
http://blog.rstudio.org/2014/07/22/introducing-tidyr/
https://github.com/hadley/tidyr

# use 'faithful' data set for examples

# R: the good parts
http://blog.datascienceretreat.com/post/69789735503/r-the-good-parts


# Online Homework Delivery Systems
http://sourceforge.net/projects/openwebwork/
http://www.nsta.org/publications/news/story.aspx?id=51970


### R environment

set R_PROFILE variable

setting up .RProfile file
customizations


.Rprofile file shouldn't include any code that affects the results of programs, as this would make them irreproducible for other users.
.Rprofile file shouldn't load packages, change the options of functions, define functions etc. 
Instead, add an initialization script at the top level of every project file
R code should be self-contained and reproducible 

special functions
.First
.Last

.Rprofile file can include code that changes the appearance of R:

# describing options() params
# set global options
options()
# get global options
getOption()

example:
option_values <- options()  # get all global options
length(option_values)
head(option_values)
tail(option_values)
options("digits")
options(digits=3)

# set wide display for multiple monitors
options(width=160)

getOption("max.print")
options("max.print")
options(max.print=100)

# set default CRAN mirror
options(repos=c(CRAN="http://cran.rstudio.com")))

# set prompt
options(prompt="R", digits=4, show.signif.stars=FALSE)

# customize windows graphics defaults
setHook(packageEvent("grDevices", "onLoad"),
        function(...)
            grDevices::windows.options(width=8, height=6,
                                       xpos=0, pointsize=10,
                                       bitmap.aa.win="cleartype"))


###


# style guide
I follow Hadley Wickham's style guide, with some small exceptions.
I liked your points about using whitespace to enhance readability and shorten length of lines.

I personally dislike the '<-' assignment operator, but I still use it in R, instead of '='.  The reason is that the two assignment operators are not equivalent in R.
The '<-' and '=' operators differ in scope and precedence ('<-' has higher precedence than '=')

The '=' operator is used for named arguments in function calls.

As a rule of thumb, I use '<-' in R scripts, and I use '=' in function calls.

If I had a choice, I would completely eliminate the '<-' assignment operator.


### Control statements

inside if() statements almost always use '||' and '&&'


use this:
my_var <- if (my_clause) A.expression else B.expression

instead of this:
if (my_clause) {
my_var <- A.expression
} else {
my_var <- B.expression
}


foreach
read:
foreach Nesting Loops.pdf


### regular expressions

# string manipulation

# Convert string into variable
http://cran.r-project.org/doc/FAQ/R-FAQ.html#How-can-I-turn-a-string-into-a-variable_003f
http://www.r-bloggers.com/converting-a-string-to-a-variable-name-on-the-fly-and-vice-versa-in-r/
http://stackoverflow.com/questions/6034655/r-how-to-convert-string-to-variable-name
http://stackoverflow.com/questions/9057006/getting-strings-recognized-as-variable-names-in-r



### data types and classes

### data structures


### tips and tricks


# another example:
http://www.bioinformaticszen.com/post/simple-functional-programming-in-r/

married <- c("Yes","Yes","No","No","Yes","Yes","","No","Yes")
# now initialize and grow - will perform poorly because the new vector binary.married is recreated each time to add a new element onto the end.
binary.married <- c()
for (i in 1:length(married)) {
  if(married[i] == "Yes"){
    binary.married <- c(binary.married, 1)
  } else {
    binary.married <- c(binary.married, 0)
  }
}

# use instead:
binary.married <- rep(0, length(married))
for (i in 1:length(married)) {
  if(married[i] == "Yes") binary.married[i] <- 1
}

# rewrite above using apply
binary.married <- sapply(married, function (x) (x=="Yes"))
binary.married <- sapply(married, function (x) switch(x, Yes=1, No=0, NA))

# even better:
character.to.binary <- function(x) {
  switch(x, Yes=1, No=0, NA)
}
binary.married <- sapply(married, character.to.binary)

# Proportion of respondents married
mean(binary.married[binary.married != ""])
mean(binary.married, na.rm=TRUE)


# for large n, better to create transpose, column by column, instead of row by row:
tmat <- matrix(0.0, k, n)
for (i in 1:n)  {
	tmat[, i] <- long.computation(i, .....)
}



# subsetting
x[ind, drop=FALSE]
drop=FALSE

Use
subset(x, ...)
only in interactive, not in function


# R matrixStats package
demonstrate fast Methods that apply to rows and columns of a matrix


### data frames

Working with data frames
http://en.wikibooks.org/wiki/R_Programming/Working_with_data_frames

sort
order()

which()


### operators


comparison operators
'=='
identical()


set operators
%in% binary operator
(6:10) %in% (1:36)
which(c("a", "b", "c", "d", "e", "a", "b", "c", "d", "e") %in% c("d", "e"))

http://stat.ethz.ch/R-manual/R-devel/library/base/html/match.html

get indexes of the specific elements inside a larger vector - we are asking which elements of (1:36 %in% 1:6) are TRUE:
which(1:36 %in% 6:10)

all(1:6 %in% 0:36)
all(1:60 %in% 0:36)

any(1:6 %in% 0:36)
any(1:60 %in% 0:36)
any(50:60 %in% 0:36)

if(length(union(smallset,bigset) > length(bigset)) print('disjunct sets')


# Combinatorial functions

create combinations of n elements, m at a time
combn(x, m, FUN=NULL, simplify=TRUE, ...)
combn(letters[1:4], 2)

create data frame from all combinations of factors or vectors
expand.grid()
x <- seq(0, 10, length.out=100)
y <- seq(-1, 1, length.out=20)
d1 <- expand.grid(x=x, y=y)
d2 <- expand.grid(x=x, y=y, KEEP.OUT.ATTRS=FALSE)



# plyr

# dplyr 0.2
http://blog.rstudio.org/2014/05/21/dplyr-0-2/


### input/output

# Construct the path to a file from components in a platform-independent way
file.path(dir_name, vec_file_names)

give examples of file manipulation
file.create()
file.exists()
file.rename()

R data formats: RData, Rda, Rds etc
http://stackoverflow.com/questions/21370132/r-data-formats-rdata-rda-rds-etc


# simple example to write lines of text to a file

find out more:
?connections

fileConn <- file("output.txt")
writeLines(c("Hello","World"), fileConn)
close(fileConn)
# unlink("ex.data")

file, pipe, fifo, url, gzfile, bzfile, xzfile, unz and socketConnection return a connection object which inherits from class "connection" and has a first more specific class.


Package xlsx
read.xls from the gdata package
In RStudio go to Workspace/Import Dataset
runs read.csv() for you
recycling rule

captures all output sent to the standard output and returns a character vector where each element correspond to a line of output.
capture.output() 
it does not capture the output sent to the standard error, e.g. cat("Hello\nworld!\n", file=stderr()) and message("Hello\nworld!\n").
it is very slow
captureOutput() function of R.utils

# running scripts

# saving output to file

https://groups.google.com/forum/#!topic/knitr/TCz9vNLlslY

http://comments.gmane.org/gmane.comp.lang.r.knitr/267


### Date and Time

date and time conversion
Posix
UTC TZ
http://www.noamross.net/blog/2014/2/10/using-times-and-dates-in-r---presentation-code.html

# package lubridate
http://www.r-statistics.com/2012/03/do-more-with-dates-and-times-in-r-with-lubridate-1-1-0/


### plotting
functions: plot, line, points

package ggplot
http://www.statmethods.net/advgraphs/ggplot2.html


# create ggpvis example:
download daily return data for a dozen assets: stocks, bonds, REITS
create weighted average portfolio of these assets
create ggpvis application to dynamically plot the portfolio, while adjusting its weights
display portfolio performance statistics on the plot


### data management


explain load() function:
loads data and returns name invisibly


###

show option_example.R


###
topics to cover:

# regression topics

class lm and sublclasses


# regression sources
James Statistical Learning in R
Rnews_2002-3 Regression Diagnostic.pdf
Faraway Practical Regression and Anova using R.pdf


# regression examples:
http://machinelearningmastery.com/linear-regression-in-r/

https://cran.r-project.org/doc/contrib/

# Manoj Kumar
http://idatasciencer.com/


# what's this?
No need to carry around long argument lists
create frame with Fisher information



###


### functions

# view source code of function
http://stackoverflow.com/questions/19226816/how-can-i-view-the-source-code-for-a-function
http://stackoverflow.com/questions/3485228/view-source-code-in-r
http://librestats.com/2014/05/01/searching-an-r-functions-source-code/
https://gist.github.com/wrathematics/11378737

Non-visible functions aren't exported

http://stackoverflow.com/questions/5835312/looking-at-internal-methods

for packages not attached to the search path

explain functions:
UseMethod()
NextMethod()


# examples: just shows UseMethod() call
getAnywhere('rollapply')
A single object matching rollapply was found
It was found in the following places
  package:zoo
  namespace:zoo
with value

function (data, ...) 
UseMethod("rollapply")
<environment: namespace:zoo>

# similar to SumDots()
# example for homework or test: rewrite MySum() so that it is recursive, instead of calling sum()
MySum <- function(n.var1=2, n.var2=1, ...) { # define function MySum
# default values can be specified in the argument list
n.var1 + 2*n.var2 + sum(...)
# the function returns the last evaluated statement
} # end MySum


# examples: this shows source code
getAnywhere('rollapply.zoo')
getAnywhere('rollmedian.zoo')


the .* functions:
	.C
	.Call
	.Fortran
	.External
	.Internal
	.Primitive
call functions that are compiled

primitive functions

the .* functions:
.Internal
.Primitive
are used to call functions built into the R interpreter


# function debugging

function edit
edit()

debug()
browser()
stopifnot()

Return values
return()
side-effects
copy-on-modify semantics
modifying a function argument does not change the original value

# function dispatch


getOption()

UseMethod()
When a function calling UseMethod("fun") is applied to an object with class attribute c("first", "second"), the system searches for a function called fun.first and, if it finds it, applies it to the object. 
If no such function is found a function called fun.second is tried. 
If no class name produces a suitable function, the function fun.default is used, if it exists, or an error results.

good example
http://stackoverflow.com/questions/8430178/arguments-and-classes-for-writing-generic-functions-in-r


### function operators

# functions that have functions as arguments
http://adv-r.had.co.nz/Functionals.html


incoroporate rollmedian() example

A function operator is a function that takes one (or more) functions as input and returns a function as output.
function operators are similar to functionals
function operators extract common patterns of anonymous function use


# Functional Programming using Map and Reduce

Map()
Reduce()
Filter()

Map() computes two or more lists (or data frames) in parallel
Map() is a variant of lapply(), where all arguments can vary
Map() is equivalent to mapply with simplify=FALSE


match.fun()
call a function 'func'
call_fun <- function(func, ...) func(...)

# lists of functions
http://adv-r.had.co.nz/Functional-programming.html

lapply(compute_mean, function(f) system.time(f(x)))


### parallel computing 

http://beckmw.wordpress.com/2014/01/21/a-brief-foray-into-parallel-processing-with-r/
http://blog.revolutionanalytics.com/2013/12/tips-on-computing-with-big-data-in-r.html

# foreach package for loops with parallel processing
http://blog.revolutionanalytics.com/2013/08/wonders-of-foreach.html
http://blog.revolutionanalytics.com/2009/05/parallelized-backtesting-with-foreach.html
http://blog.revolutionanalytics.com/2009/07/simple-scalable-parallel-computing-in-r.html
http://blog.revolutionanalytics.com/2009/08/parallel-programming-with-foreach-and-snow.html

http://www.exegetic.biz/blog/2013/11/iterators-in-r/


### Infix functions
prefix operators

# Defining new binary operators
"%!%" <- function(X, y) { ... }

The function could then be used as X %!% y.



###
FRE6871_Lecture_1

The R Environment
Data Objects
Operators
Control Structures
Manipulating Vectors and Matrices


###
FRE6871_Lecture_2

Functions in R
Functionals
Simulation
Atomic Data Objects
Factors
Plotting in R
Plotting Probability Distributions
Probability and Statistics
Hypothesis Testing

wipp


control statements
plotting in R
setting and getting options defaults
Probability and Statistics
Pseudo-Random Numbers
Logistic map
microbenchmark from numerical_analysis
bootstrapping

package Rcpp
Logistic map in Rcpp
anonymous functions
functionals
data frames

###
FRE6871_Lecture_3

Multiplying Vectors and Matrices
Linear Algebra
Eigenvectors and Eigenvalues
SVD
Cholesky


###
FRE6871_Lecture_4

Vasicek single factor model


###
FRE6871_Lecture_5

statistical tests
formula objects
regression
logistic regression
credit scoring forecasting model


###
FRE6871_Lecture_6

package quantmod
Principal Component Analysis PCA of interest rates

while loops for simulation
barrier option example
function ifelse()

vectorized functions
Newton-Raphson method solving for zero in Rcpp
optimization in Rcpp

shiny
RMarkdown

The AER package includes replication datasets for some important textbooks in econometrics.
The EcDat package includes replication archive for the Journal of Applied Econometrics, the Journal of Business and Economic Statistics, etc
Yule 1899 data

split apply combine procedure
error and warning handling
trycatch
debugging


###
FRE6871_Lecture_7

packages
CRAN Views
Estimate moments using package moments

environments

input/output

classes, generic functions and object orientation
method dispatch



###################################
###	EXTRA TOPICS		###
###################################



### Fitting Market Returns

# Customizing Startup

http://www.statmethods.net/interface/customizing.html


# Homework Assignment
# create a function that performs the following:
input is a vector with possible NA values
output named vector of length two, with first value being total number of elements of input vector 
with possible NA values
if input is not a vector, then function returns a warning message
output named vector of length two, with first value being total number of elements of input vector 
counts NAs as data values and doesn't tell you

# Homework Assignment
# create a function that performs the following:
reads a matrix from a file
restores rownames (if needed)
you can call functions read.csv() or scan()


# Options Settings
https://stat.ethz.ch/R-manual/R-devel/library/base/html/options.html

### parsing arguments and variables

# Look for an Argument in the Call
hasArg()

# get value of variable from its string
get()
Return the Value of a Named Object
get(make.names("agg_price_window"))
get(paste("agg", "price", "window", sep="_"))
get("agg_price_window")


Replacement function replace() - not sure it's important
http://stackoverflow.com/questions/11563154/what-are-replacement-functions-in-r
http://stackoverflow.com/questions/11811027/replace-function-examples



####

Sikai> So my question is, how does match.arg() work in this function?
The function match.arg() has a second argument called "choices", which must be a character vector containing the only possible values for the first argument "arg".
When match.arg() is called inside a functional, and if that functional has default values for the argument "arg", then R passes those default values to the argument "choices".  This way only one of the default values for "arg" are permitted to be assigned to "arg".
In order to find out how R does this internally would require analyzing the code for match.arg() and probably several other functions.
