% FRE6871_Lecture_7

% Define knitr options
% !Rnw weave = knitr
% Set global chunk options
<<knitr_setup,include=FALSE,cache=FALSE>>=
library(knitr)
opts_chunk$set(prompt=TRUE, tidy=FALSE, strip.white=FALSE, comment=NA, highlight=FALSE, message=FALSE, warning=FALSE, size='scriptsize', fig.width=4, fig.height=4)
options(width=60, dev='pdf')
thm <- knit_theme$get("acid")
knit_theme$set(thm)
@


% Define document options
\documentclass[10pt]{beamer}
\mode<presentation>
\usetheme{AnnArbor}
% \usecolortheme{whale}
% Uncover everything in a step-wise fashion
% \beamerdefaultoverlayspecification{<+->}
% amsmath package for math symbols
% \usepackage{amsmath}
\usepackage[latin1]{inputenc}
\usepackage{hyperref}
\usepackage{fancybox}
\usepackage{url}
\usepackage[backend=bibtex,style=alphabetic]{biblatex} % bibstyle=numeric
% \bibliographystyle{amsalpha} % doesn't work
\addbibresource{FRE_lectures.bib}
% \addbibresource[location=remote]{http://www.citeulike.org/user/jerzyp}
\renewcommand\bibfont{\footnotesize}
\renewcommand{\pgfuseimage}[1]{\scalebox{0.75}{\includegraphics{#1}}} % scale bib icons
\setbeamertemplate{bibliography item}[text] % set bib icons
% \setbeamertemplate{bibliography item}{} % remove bib icons

% \usepackage{enumerate}
% \let\emph\textbf
% \let\alert\textbf
% Define colors for hyperlinks
\definecolor{links}{HTML}{2A1B81}
\hypersetup{colorlinks=true,linkcolor=,urlcolor=links}
% Make url text footnotesize
\renewcommand\UrlFont{\footnotesize}
% Make institute text italic and small
\setbeamerfont{institute}{size=\small,shape=\itshape,bg=red,fg=red}
\setbeamerfont{date}{size=\small}
\setbeamerfont{block title}{size=\normalsize} % shape=\itshape
\setbeamerfont{block body}{size=\footnotesize}


% Title page setup
\title[FRE6871 Lecture \#7]{FRE6871 \texttt{R} in Finance}
\subtitle{Lecture \#7, Spring 2015}
% \subject{Getting Started With R}
\institute[NYU Polytechnic]{NYU Polytechnic School of Engineering}
\titlegraphic{\includegraphics[scale=0.8]{engineering_long_color}}
\author[Jerzy Pawlowski]{Jerzy Pawlowski \emph{\href{mailto:jp3900@nyu.edu}{jp3900@nyu.edu}}}
\date{December 8, 2014}
% \date{\today}
% \pgfdeclareimage[height=0.5cm]{university-logo}{engineering_long_white}
% \logo{\pgfuseimage{engineering_long_white}}


%%%%%%%%%%%%%%%
\begin{document}


%%%%%%%%%%%%%%%
\maketitle



%%%%%%%%%%%%%%%
\section{The \texttt{R} Environment}


%%%%%%%%%%%%%%%
\subsection{\texttt{R} Session Info}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.4\textwidth}
      The function \texttt{sessionInfo()} returns information about the current \texttt{R} session,
      \begin{itemize}
        \item \texttt{R version},
        \item \texttt{OS platform},
        \item \texttt{locale} settings,
        \item list of packages that are loaded and attached to the search path,
        \item list of packages that are loaded, but \emph{not} attached to the search path,
      \end{itemize}
    \column{0.6\textwidth}
      \vspace{-1em}
      <<>>=
sessionInfo()  # get R version and other session info
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Environment Variables}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.4\textwidth}
      \texttt{R} uses environment variables to store information about its environment,
      \begin{itemize}
        \item \texttt{HOME} stores the \texttt{R} user Home directory,
        \item \texttt{R\_HOME} stores the root directory of the \texttt{R} installation,
      \end{itemize}
      The functions \texttt{Sys.setenv()} and \texttt{Sys.getenv()} set and retrieve the values of environment variables,
    \column{0.6\textwidth}
      \vspace{-1em}
      <<>>=
Sys.getenv()[5:7]  # list some environment variables

Sys.getenv("Home")  # get R user HOME directory

Sys.setenv(Home='C:/Develop')  # set HOME directory

Sys.getenv("Home")  # get user HOME directory

Sys.getenv("R_home")  # get R_HOME directory

R.home()  # get R_HOME directory

R.home("etc")  # get "etc" sub-directory of R_HOME
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Global \texttt{options} Settings}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.4\textwidth}
      \texttt{R} uses a list of global \texttt{options} which affect how \texttt{R} computes and displays results,
      \vskip1ex
      The function \texttt{options()} sets and retrieves the values of global \texttt{options},
    \column{0.6\textwidth}
      \vspace{-1em}
      <<eval=FALSE>>=
# ?options  # long list of global options

# interpret strings as characters, not factors
options("stringsAsFactors")
options(stringsAsFactors=FALSE)

# number of digits printed for numeric values
options(digits=3)

# number of items printed to console
options(max.print=80)

# warning levels options
# negative - warnings are ignored
options(warn=-1)
# zero - warnings are stored and printed after top-level function has completed
options(warn=0)
# one - warnings are printed as they occur
options(warn=1)
# two or larger - warnings are turned into errors
options(warn=2)
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Constructing File Paths}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.4\textwidth}
      Names of \emph{file paths} can be constructed using the function \texttt{paste()},
      \vskip1ex
      The function \texttt{file.path()} is similar to \texttt{paste()}, but automatically uses the correct separator for the platform,
      \vskip1ex
      The function \texttt{normalizePath()} performs tilde-expansions and displays file paths in user-readable format,
    \column{0.6\textwidth}
      \vspace{-1em}
      <<>>=
# R startup (site) directory
paste(R.home(), 'etc', sep='/')

file.path(R.home(), 'etc')  # better way

# perform tilde-expansions and convert to readable format
normalizePath(file.path(R.home(), 'etc'), winslash="/")

normalizePath(R.home("etc"), winslash="/")
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{\texttt{R} System Directories under \texttt{Windows}}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.4\textwidth}
      \texttt{R} uses several different directories to search, read, and store files:
      \begin{itemize}
        \item \texttt{Windows} user \texttt{HOME} directory: \texttt{'\textasciitilde{}'} (\texttt{'\%USERPROFILE\%/Documents'}),
        \item \texttt{R} user \texttt{HOME} directory,
        \item \texttt{cwd} current working directory - the default directory for storing and retrieving user files (such as \texttt{.Rhistory}, \texttt{*.RData}, etc.),
        \item \texttt{R\_HOME} root directory of the \texttt{R} installation,
        \item \texttt{R} startup (site) directory: \texttt{R\_HOME/etc/},
      \end{itemize}
      By default, the \texttt{R} user \texttt{HOME} directory is the \texttt{Windows} user \texttt{HOME} directory,
      \vskip1ex
      The \texttt{cwd} is set to the directory from which \texttt{R} is invoked, or the \texttt{R} user \texttt{HOME} directory,
    \column{0.6\textwidth}
      \vspace{-1em}
      <<>>=
normalizePath('~', winslash="/")  # Windows user HOME directory

Sys.getenv("Home")  # R user HOME directory

setwd("C:/Develop/R")
getwd()  # current working directory

# R startup (site) directory
normalizePath(file.path(R.home(), 'etc'), winslash="/")

# R executable directory
normalizePath(file.path(R.home(), 'bin/x64'), winslash="/")

# R documentation directory
normalizePath(file.path(R.home(), 'doc/manual'), winslash="/")
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{File and Directory Listing Functions}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.4\textwidth}
      \vskip1ex
      The functions \texttt{list.files()} and \texttt{dir()} return a vector of names of files in a given directory,
      \vskip1ex
      \texttt{list.dirs()} lists the directories in a given directory,
      \vskip1ex
      \texttt{Sys.glob()} lists files matching names obtained from wildcard expansion,
    \column{0.6\textwidth}
      \vspace{-1em}
      <<>>=
setwd("C:/Develop/data")
sample(dir(), 5)  # get 5 file names - dir() lists all files
dir(pattern="csv")  # list files containing "csv"
list.files(R.home())  # all files in R_HOME directory
list.files(R.home("etc"))  # all files in "etc" sub-directory of R_HOME directory
list.dirs()  # directories in cwd
list.dirs(R.home("etc"))  # directories in "etc" sub-directory
Sys.glob("*.csv")
Sys.glob(R.home("etc"))
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Invoking an \texttt{R} Session in \texttt{Windows}}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      An \texttt{R} session can run in several different ways:
      \begin{itemize}
        \item In an \texttt{R} terminal (by invoking \texttt{R.exe} or \texttt{Rterm.exe}),
        \item In an \texttt{R} RGui (by invoking \texttt{RGui.exe}),
        \item In an \texttt{RStudio} session (or some other IDE),
      \end{itemize}
      The initial value of the \texttt{cwd} depends on how the \texttt{R} session is invoked.\\
      If \texttt{R} is invoked:
      \begin{itemize}
        \item from the \texttt{Windows} menu, then \texttt{cwd} is set to the \texttt{R} user \texttt{HOME} directory,
        \item by clicking on a file (\texttt{*.R}, \texttt{*.RData}, etc.), then \texttt{cwd} is set to the file's directory,
        \item by typing \texttt{R.exe} or \texttt{Rterm.exe} in the command shell (after setting the \texttt{PATH}), then \texttt{cwd} is set to the directory where the command was typed,
      \end{itemize}
    \column{0.5\textwidth}
      \vspace{-1em}
      <<>>=
getwd()  # get cwd
      @
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{\texttt{R} Session Startup}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.4\textwidth}
      At startup \texttt{R} sources (reads) several types of files, in the following order:
      \begin{itemize}
        \item \texttt{Renviron} files defining environment variables,
        \item \texttt{Rprofile} files containing code executed at \texttt{R} startup,
        \item \texttt{RData} files containing data to be loaded at \texttt{R} startup,
      \end{itemize}
      \texttt{R} sources files from several directories, in the following order:
      \begin{itemize}
        \item \texttt{R} startup directory: \texttt{Renviron.site} and \texttt{Rprofile.site} files,
        \item \texttt{cwd} directory: \texttt{.Renviron}, \texttt{.Rprofile}, and \texttt{.Rdata} files,
        \item \texttt{HOME} user directory (only if no files found in \texttt{cwd}),
      \end{itemize}
      The above startup process can be customized by setting environment variables,
    \column{0.6\textwidth}
      \vspace{-1em}
      <<echo=(-1)>>=
setwd("C:/Develop/R")
# help(Startup)  # description of R session startup mechanism

# files in R startup directory directory
dir(normalizePath(file.path(R.home(), 'etc'), winslash="/"))

# *.R* files in cwd directory
getwd()
dir(getwd(), all.files=TRUE, pattern="\\.R")
dir(getwd(), all.files=TRUE, pattern=glob2rx("*.R*"))
      @
  \end{columns}
\end{block}

\end{frame}



%%%%%%%%%%%%%%%
\section{Plotting Probability Distributions}


%%%%%%%%%%%%%%%
\subsection{Normal Probability Distribution}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      The Normal probability density function is given by:
      \begin{displaymath}
        P(x) = \frac{e^{-(x-\mu)^2/2\sigma^2}}{\sigma\sqrt{2 \pi}}
      \end{displaymath}
      The Standard Normal distribution is a special case of the Normal with $\mu=0$ and $\sigma=1$,
\vskip1ex
      The function \texttt{dnorm()} calculates the normal probability density,

        <<norm_dist,echo=(-(1:2)),fig.show='hide'>>=
rm(list=ls())
par(mar=c(7, 2, 1, 2), mgp=c(2, 1, 0), cex.lab=0.8, cex.axis=0.8, cex.main=0.8, cex.sub=0.5)
x_var <- seq(-5, 7, length=100)
y_var <- dnorm(x_var, mean=1.0, sd=2.0)
plot(x_var, y_var, type="l", lty="solid", 
     xlab="", ylab="")
title(main="Normal Density Function", line=0.5)
star_t <- 3; fin_ish <- 5  # set lower and upper bounds
# set polygon base
are_a <- ((x_var >= star_t) & (x_var <= fin_ish))
polygon(c(star_t, x_var[are_a], fin_ish),  # draw polygon
        c(-1, y_var[are_a], -1), col="red")
      @
    \column{0.5\textwidth}
    \includegraphics[width=0.5\paperwidth,valign=t]{figure/norm_dist-1}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Normal Probability Distributions}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      Plots of several Normal distributions with different values of $\sigma$, using the function \texttt{curve()} for plotting functions given by their name,
        <<norm_dist_mult_curves,echo=(-1),fig.show='hide'>>=
par(mar=c(7, 2, 1, 2), mgp=c(2, 1, 0), cex.lab=0.8, cex.axis=0.8, cex.main=0.8, cex.sub=0.5)
sig_mas <- c(0.5, 1, 1.5, 2)  # sigma values
# create plot colors
pal_let <- c("red", "black", "blue", "green")
# create legend labels
lab_els <- paste("sigma", sig_mas, sep='=')
for (in_dex in 1:4) {  # plot four curves
curve(expr=dnorm(x, sd=sig_mas[in_dex]), 
      type="l", xlim=c(-4, 4), 
      xlab="", ylab="", lwd=2, 
      col=pal_let[in_dex], 
      add=as.logical(in_dex-1))
}  # end for
# add title
title(main="Normal Distributions", line=0.5)
# add legend
legend("topright", inset=0.05, title="Sigmas", 
       lab_els, cex=0.8, lwd=2, lty=c(1, 1, 1, 1), 
       col=pal_let)
      @
    \column{0.5\textwidth}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/norm_dist_mult_curves-1}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Normal Probability Distributions as Lines}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      Plots of several Normal distributions with different values of $\sigma$,
        <<norm_dist_mult,echo=(-(1:2)),fig.show='hide'>>=
rm(list=ls())
par(mar=c(7, 2, 1, 2), mgp=c(2, 1, 0), cex.lab=0.8, cex.axis=0.8, cex.main=0.8, cex.sub=0.5)
x_var <- seq(-4, 4, length=100)
sig_mas <- c(0.5, 1, 1.5, 2)  # sigma values
# create plot colors
pal_let <- c("red", "black", "blue", "green")
# create legend labels
lab_els <- paste("sigma", sig_mas, sep='=')
# plot an empty chart
plot(x_var, dnorm(x_var, sd=sig_mas[1]), 
     type="n", xlab="", ylab="", 
     main="Normal Distributions")
# add lines to plot
for (in_dex in 1:4) {
  lines(x_var, dnorm(x_var, sd=sig_mas[in_dex]), 
        lwd=2, col=pal_let[in_dex])
}
# add legend
legend("topright", inset=0.05, title="Sigmas", 
       lab_els, cex=0.8, lwd=2, lty=c(1, 1, 1, 1), 
       col=pal_let)
      @
    \column{0.5\textwidth}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/norm_dist_mult-1}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Chi-squared Distribution}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      Let $Z_{1},\ldots ,Z_{k}$ be independent standard normal random variables,
      \vskip1ex
      Let $X=\sum_{i=1}^{k}Z_{i}^{2}$, \hskip1em then $X\sim \chi _{k}^{2}$,
        <<chisq_dist_mult,echo=(-1),fig.show='hide'>>=
par(mar=c(7, 2, 1, 2), mgp=c(2, 1, 0), cex.lab=0.8, cex.axis=0.8, cex.main=0.8, cex.sub=0.5)
d_free <- c(2, 5, 8, 11)  # df values
# create plot colors
pal_let <- c("red", "black", "blue", "green")
# create legend labels
lab_els <- paste("df", d_free, sep='=')
for (in_dex in 1:4) {  # plot four curves
curve(expr=dchisq(x, df=d_free[in_dex]), 
      type="l", xlim=c(0, 20), ylim=c(0, 0.3), 
      xlab="", ylab="", lwd=2, 
      col=pal_let[in_dex], 
      add=as.logical(in_dex-1))
}  # end for
# add title
title(main="Chi-squared Distributions", line=0.5)
# add legend
legend("topright", inset=0.05, 
       title="Degrees of freedom", lab_els, 
       cex=0.8, lwd=2, lty=c(1, 1, 1, 1), 
       col=pal_let)
      @
    \column{0.5\textwidth}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/chisq_dist_mult-1}
      \vspace{-4em}
      $X$ is distributed according to the \emph{chi-squared} distribution with \texttt{k} degrees of freedom, given by:
% \normalsize
      \begin{displaymath}
        P(x) = \frac{x^{k/2-1}\,e^{-x/2}}{2^{k/2}\, \Gamma(k/2)}
      \end{displaymath}
% \footnotesize
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Chi-squared Distribution as Line}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      Let $Z_{1},\ldots ,Z_{k}$ be independent standard normal random variables,
      \vskip1ex
      Let $X=\sum_{i=1}^{k}Z_{i}^{2}$, \hskip1em then $X\sim \chi _{k}^{2}$,
        <<chisq_dist_mult_lines,echo=(-(1:2)),fig.show='hide'>>=
rm(list=ls())
par(mar=c(7, 2, 1, 2), mgp=c(2, 1, 0), cex.lab=0.8, cex.axis=0.8, cex.main=0.8, cex.sub=0.5)
x_var <- seq(0, 20, length=100)
d_free <- c(2, 5, 8, 11)  # df values
# create plot colors
pal_let <- c("red", "black", "blue", "green")
# create legend labels
lab_els <- paste("df", d_free, sep='=')
# plot an empty chart
plot(x_var, dchisq(x_var, df=d_free[1]), 
     type="n", xlab="", ylab="", ylim=c(0, 0.3), 
     main="Chi-squared Distributions")
# add lines to plot
for (in_dex in 1:4) {
  lines(x_var, dchisq(x_var, df=d_free[in_dex]), 
        lwd=2, col=pal_let[in_dex])
}
# add legend
legend("topright", inset=0.05, 
       title="Degrees of freedom", lab_els, 
       cex=0.8, lwd=2, lty=c(1, 1, 1, 1), 
       col=pal_let)
      @
    \column{0.5\textwidth}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/chisq_dist_mult_lines-1}
      \vspace{-4em}
      $X$ is distributed according to the \emph{chi-squared} distribution with \texttt{k} degrees of freedom, given by:
% \normalsize
      \begin{displaymath}
        P(x) = \frac{x^{k/2-1}\,e^{-x/2}}{2^{k/2}\, \Gamma(k/2)}
      \end{displaymath}
% \footnotesize
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Student's \texttt{t}-distribution}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      Let $Z_{1},\ldots ,Z_{k}$ be independent standard normal random variables,
      \vskip1ex
      Let $s^2=\sum_{i=1}^{\nu}Z_{i}^{2}$, \hskip1em $t=\frac{\sum_{i=1}^{\nu}Z_{i}}{s}$,
        <<t_dist_mult,echo=(-1),fig.show='hide'>>=
par(mar=c(7, 2, 1, 2), mgp=c(2, 1, 0), cex.lab=0.8, cex.axis=0.8, cex.main=0.8, cex.sub=0.5)
d_free <- c(3, 6, 9)  # df values
# create plot colors
pal_let <- c("black", "red", "blue", "green")
# create legend labels
lab_els <- c('normal', paste("df", d_free, sep='='))
# plot a Normal probability distribution
curve(expr=dnorm, type="l", xlim=c(-4, 4), 
      xlab="", ylab="", lwd=2)
for (in_dex in 1:3) {  # plot three curves
curve(expr=dt(x, df=d_free[in_dex]), 
      type="l", xlab="", ylab="", lwd=2, 
      col=pal_let[in_dex+1], add=TRUE)
}  # end for
# add title
title(main="t-distributions", line=0.5)
# add legend
legend("topright", inset=0.05, 
       title="Degrees\n of freedom", lab_els, 
       cex=0.8, lwd=2, lty=c(1, 1, 1, 1), 
       col=pal_let)
      @
    \column{0.5\textwidth}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/t_dist_mult-1}
      \vspace{-4em}
      \texttt{t} is distributed according to the \texttt{t}-distribution with $\nu$ degrees of freedom, given by:
      \begin{displaymath}
        P(x) = \frac{\Gamma((\nu+1)/2)}{\sqrt{\pi \nu}\,\Gamma(\nu/2)}\, (1 + x^2/\nu)^{-(\nu+1)/2}
      \end{displaymath}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Student's \texttt{t}-distribution as Line}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      Let $Z_{1},\ldots ,Z_{k}$ be independent standard normal random variables,
      \vskip1ex
      Let $s^2=\sum_{i=1}^{\nu}Z_{i}^{2}$, \hskip1em $t=\frac{\sum_{i=1}^{\nu}Z_{i}}{s}$,
        <<t_dist_mult_lines,echo=(-(1:2)),fig.show='hide'>>=
rm(list=ls())
par(mar=c(7, 2, 1, 2), mgp=c(2, 1, 0), cex.lab=0.8, cex.axis=0.8, cex.main=0.8, cex.sub=0.5)
x_var <- seq(-4, 4, length=100)
d_free <- c(3, 6, 9)  # df values
# create plot colors
pal_let <- c("black", "red", "blue", "green")
# create legend labels
lab_els <- c('normal', paste("df", d_free, sep='='))
# plot chart of normal distribution
plot(x_var, dnorm(x_var), type="l", 
     lwd=2, xlab="", ylab="", 
     main="t-distributions")
# add lines to plot
for (in_dex in 1:3) {
  lines(x_var, dt(x_var, df=d_free[in_dex]), 
        lwd=2, col=pal_let[in_dex+1])
}
# add legend
legend("topright", inset=0.05, 
       title="Degrees\n of freedom", lab_els, 
       cex=0.8, lwd=2, lty=c(1, 1, 1, 1), 
       col=pal_let)
      @
    \column{0.5\textwidth}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/t_dist_mult_lines-1}
      \vspace{-4em}
      \texttt{t} is distributed according to the \texttt{t}-distribution with $\nu$ degrees of freedom, given by:
      \begin{displaymath}
        P(x) = \frac{\Gamma((\nu+1)/2)}{\sqrt{\pi \nu}\,\Gamma(\nu/2)}\, (1 + x^2/\nu)^{-(\nu+1)/2}
      \end{displaymath}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Poisson Probability Distribution}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      The \emph{Poisson} distribution gives the probability of the number of events in intervals of space or time (the amount of mail received each day),
      \vskip1ex
      The Poisson probability function is given by:
      \begin{displaymath}
        P(k; \lambda) = \frac{{\lambda^k}{\cdot}{e^{-\lambda}}}{k!}
      \end{displaymath}
      The parameter $\lambda$ determines the average number of events per interval,
        \vspace{-1em}
        <<poiss_dist,echo=(-(1:2)),fig.show='hide'>>=
rm(list=ls())
par(mar=c(7, 2, 1, 2), mgp=c(2, 1, 0), cex.lab=0.8, cex.axis=0.8, cex.main=0.8, cex.sub=0.5)
poisson_events <- 0:11  # Poisson events
poisson_freq <- dpois(poisson_events, lambda=4)
names(poisson_freq) <- as.character(poisson_events)
poisson_freq
poisson_func <- function(x, lambda)  # Poisson function
                    {exp(-lambda)*lambda^x/factorial(x)}
curve(expr=poisson_func(x, lambda=4), xlim=c(0, 11), main="Poisson distribution",
      xlab="No. of events", ylab="Frequency of events", lwd=2, col="red")
legend(x="topright", legend="Poisson density", title="", 
       inset=0.05, cex=0.8, bg="white", lwd=4, lty=1, col="red")
      @
    \column{0.5\textwidth}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/poiss_dist-1}
  \end{columns}
\end{block}

\end{frame}



%%%%%%%%%%%%%%%
\section{Plotting Using Package \texttt{ggplot2}}


%%%%%%%%%%%%%%%
\subsection{\texttt{ggplot2} Package for Plotting}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      \texttt{ggplot2} is a very popular \texttt{R} package for advanced plotting,
      \vskip1ex
      In the \texttt{ggplot2} framework a plot object is created by combining the outputs of several plotting functions using the "\texttt{+}" operator,
      \vskip1ex
      The function \texttt{ggplot()} defines the plot data and creates a plot template,
      \vskip1ex
      The function \texttt{aes()} specifies the plot "\emph{aesthetics}", which are mappings between data elements (rows, columns) and plot elements (points, lines),
      \vskip1ex
      \texttt{geom\_point()} adds plot points,
      \vskip1ex
      \texttt{geom\_line()} adds plot lines,
      \vskip1ex
      The function \texttt{theme()} customizes plot objects,
      \vskip1ex
      Simply calling the plot object renders the plot,
      \vskip1ex
      \texttt{ggplot2} is designed for plotting data formatted as \texttt{data frames},
    \column{0.5\textwidth}
      \vspace{-1em}
      <<ggplot_basic1,echo=(-(1:3)),fig.width=5,fig.height=4,fig.show='hide'>>=
library(zoo)  # load zoo
library(ggplot2)  # load ggplot2
library(scales)  # load scales
my_ggplot <- ggplot(  # specify data and aesthetics
  data=mtcars, mapping=aes(x=hp, y=mpg)) + 
  geom_point() +  # plot points
  ggtitle("basic scatterplot") +  # add title
  theme(  # customize plot object
        plot.title=element_text(vjust=-2.0), 
        plot.background=element_blank()
  )  # end theme
my_ggplot  # render the plot
      @
      \vspace{-2em}
      \hspace*{-2em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/ggplot_basic1-1}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{\texttt{ggplot2} Scatterplots with Labels}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      The package \texttt{directlabels} allows adding flexible lables to \texttt{ggplot2} scatterplots,
      \vspace{-1em}
      <<ggplot_scatter_lab,echo=(-(1:4)),fig.width=4,fig.height=6,fig.show='hide'>>=
# install.packages("directlabels", repo="http://r-forge.r-project.org")
library(ggplot2)  # load ggplot2
library(scales)  # load scales
library(gridExtra)  # load gridExtra
library(directlabels)  # load directlabels
my_ggplot <- ggplot(  # data and aesthetics
  data=mtcars, mapping=aes(x=hp, y=mpg)) + 
  geom_point() +  # plot points
  theme(  # customize plot object
        legend.position="none", 
        plot.title=element_text(vjust=-2.0),
        plot.margin=unit(c(-0.0,0.0,-0.5,0.0),"cm"), 
        plot.background=element_blank()
  ) + 
  scale_colour_discrete(guide="none")  # no label guide
car_names <- rownames(mtcars)
gg_labels <- geom_text(aes(  # ggplot2 labels
  label=car_names, color=car_names, size=5))
d_labels <- geom_dl(mapping=aes(  # directlabels
  label=car_names, color=car_names), 
  method=list('last.bumpup', cex=0.7, 
              hjust=1))
# render plots in single column
grid.arrange(my_ggplot + 
  ggtitle("ggplot2 labels") + gg_labels, 
  my_ggplot + ggtitle("directlabels") + 
    d_labels, ncol=1)  # end grid.arrange
      @
    \column{0.5\textwidth}
      \vspace{-2em}
      \hspace*{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/ggplot_scatter_lab-1}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{\texttt{ggplot2} Scatterplots with Group Labels}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      The \emph{Poisson} distribution gives the probability of the number of events in intervals of space or time (the amount of mail received each day),
        <<ggplot_scatter_lab_group,fig.width=5,fig.height=4,fig.show='hide'>>=
my_ggplot <- ggplot(data=iris, 
            mapping=aes(Petal.Length, Sepal.Length)) +
  geom_point(aes(shape=Species, color=Species)) +
  geom_dl(aes(label=Species, color=Species), 
          method="smart.grid") +
  scale_shape_manual(values=c(setosa=1, 
    virginica=6, versicolor=3), guide="none") + 
  scale_colour_discrete(guide="none")  # no label guide
my_ggplot  # render the plot
      @
    \column{0.5\textwidth}
      \vspace{-1em}
      \includegraphics[width=0.5\paperwidth,valign=t]{figure/ggplot_scatter_lab_group-1}
  \end{columns}
\end{block}

\end{frame}


%%%%%%%%%%%%%%%
\subsection{Plotting \texttt{zoo} Time Series Using \texttt{autoplot()}}
\begin{frame}[fragile,t]{\subsecname}
\vspace{-1em}
\begin{block}{}
  \begin{columns}[T]
    \column{0.5\textwidth}
      \texttt{autoplot()} is a convenience wrapper for \texttt{ggplot2} functions, designed to plot \texttt{zoo} time series,
      \vspace{-1em}
      <<ggplot_zoo1,echo=(-(1:4)),fig.width=5,fig.height=6,fig.show='hide'>>=
library(ggplot2)  # load ggplot2
library(scales)  # load scales
library(gridExtra)  # load gridExtra
# coerce mts object into zoo
zoo_series <- as.zoo(EuStockMarkets)
# create ggplot2 theme object
auto_theme <- theme(
  legend.position="none", 
  plot.title=element_text(vjust=-2.0), 
  plot.margin=unit(c(-0.0,0.0,-0.5,0.0),"cm"), 
#  axis.text.y=element_blank(),
  plot.background=element_blank()
  )  # end theme
# ggplot2 object for plotting in single panel
ggp_zoo_single <- autoplot(zoo_series, 
                  main="Eu Stox single panel", 
                  facets=NULL) + xlab("") +
                  auto_theme
# ggplot2 object for plotting in multiple panels
ggp_zoo_multiple <- autoplot(zoo_series, 
                  main="Eu Stox multiple panels", 
                  facets="Series ~ .") + xlab("") +
                  facet_grid("Series ~ .", 
                  scales="free_y") + auto_theme
# render plots in single column
grid.arrange(ggp_zoo_single + 
               theme(legend.position=c(0.1, 0.5)), 
             ggp_zoo_multiple, ncol=1)
      @
    \column{0.5\textwidth}
      \vspace{-0.0em}
      \hspace*{-1em}
      \includegraphics[width=0.475\paperwidth,valign=t]{figure/ggplot_zoo1-1}
  \end{columns}
\end{block}

\end{frame}



%%%%%%%%%%%%%%%
\section{Homework Assignment}


%%%%%%%%%%%%%%%
\subsection{\secname}
\begin{frame}[t]{\subsecname}
\vspace{-1em}
\begin{block}{No homework!}
  \hskip10.0em\includegraphics[scale=0.1]{smile.png}
\end{block}

\begin{block}{Recommended}
  \begin{itemize}
    \item Read chapters 10: \fullcite{website:rintro}
    \item Read chapters 13, 14: \citetitle{matloffbook}
  \end{itemize}
\end{block}

\end{frame}


\end{document}
